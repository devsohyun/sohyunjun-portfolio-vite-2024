import{r as b,j as C,R as qt}from"./index-DfcIbyxR.js";import{F as Xn,S as Gr,u as $n,a as Yn}from"./FadingImageDisplacement-BITzgEcz.js";import{u as Kn,m as qn,M as Qn,a as Vr,I as Jn,S as ke,D as ot,R as Pt,b as jr,H as Pe,F as xe,c as lt,L as Me,T as nr,d as Dt,e as ei,f as ir,g as Mt,N as ti,B as wt,h as Zr,i as ri,C as ft,j as Wr,k as ni,E as ii,l as ai,n as Ze,o as Qt,W as si,p as oi,q as li,V as He,r as ci,s as ui,t as yr,v as hi,w as fi,x as ct,y as di,z as vi,A as pi,G as mi,J as gi,K as Si,O as xi,P as Le,Q as Je,U as dt,X as We,Y as Ei,Z as Ee,_ as Ti,$ as _i,a0 as wi,a1 as yi,a2 as ar,a3 as N,a4 as sr,a5 as Lt,a6 as Mi,a7 as Ri,a8 as bi,a9 as Ai,aa as Xr,ab as et,ac as Ii,ad as $r,ae as zt,af as Ui,ag as Ci,ah as Bi,ai as Ut,aj as Mr,ak as Di,al as Rr,am as Li,an as Jt}from"./Webgl-C5LOyYBO.js";import{u as br,a as Ni}from"./useFBO-wzeqELSV.js";import{_ as or}from"./extends-CCbyfPlC.js";import{s as Pi,m as Fi}from"./shaderMaterial-ClgEOfWx.js";function Ar(e){const t=Kn(()=>qn(e)),{isStatic:r}=b.useContext(Qn);if(r){const[,i]=b.useState(e);b.useEffect(()=>t.on("change",i),[])}return t}let Et;function zi(){var e;if(Et!==void 0)return Et;try{let t;const r=document.createElement("canvas");return Et=!!(window.WebGL2RenderingContext&&(t=r.getContext("webgl2"))),t&&((e=t.getExtension("WEBGL_lose_context"))==null||e.loseContext()),Et}catch{return Et=!1}}var De=Uint8Array,Qe=Uint16Array,er=Uint32Array,Yr=new De([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),Kr=new De([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),Oi=new De([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),qr=function(e,t){for(var r=new Qe(31),i=0;i<31;++i)r[i]=t+=1<<e[i-1];for(var s=new er(r[30]),i=1;i<30;++i)for(var o=r[i];o<r[i+1];++o)s[o]=o-r[i]<<5|i;return[r,s]},Qr=qr(Yr,2),Jr=Qr[0],Hi=Qr[1];Jr[28]=258,Hi[258]=28;var ki=qr(Kr,0),Gi=ki[0],tr=new Qe(32768);for(var ae=0;ae<32768;++ae){var Ye=(ae&43690)>>>1|(ae&21845)<<1;Ye=(Ye&52428)>>>2|(Ye&13107)<<2,Ye=(Ye&61680)>>>4|(Ye&3855)<<4,tr[ae]=((Ye&65280)>>>8|(Ye&255)<<8)>>>1}var yt=function(e,t,r){for(var i=e.length,s=0,o=new Qe(t);s<i;++s)++o[e[s]-1];var l=new Qe(t);for(s=0;s<t;++s)l[s]=l[s-1]+o[s-1]<<1;var f;if(r){f=new Qe(1<<t);var u=15-t;for(s=0;s<i;++s)if(e[s])for(var d=s<<4|e[s],m=t-e[s],E=l[e[s]-1]++<<m,A=E|(1<<m)-1;E<=A;++E)f[tr[E]>>>u]=d}else for(f=new Qe(i),s=0;s<i;++s)e[s]&&(f[s]=tr[l[e[s]-1]++]>>>15-e[s]);return f},Rt=new De(288);for(var ae=0;ae<144;++ae)Rt[ae]=8;for(var ae=144;ae<256;++ae)Rt[ae]=9;for(var ae=256;ae<280;++ae)Rt[ae]=7;for(var ae=280;ae<288;++ae)Rt[ae]=8;var en=new De(32);for(var ae=0;ae<32;++ae)en[ae]=5;var Vi=yt(Rt,9,1),ji=yt(en,5,1),Ot=function(e){for(var t=e[0],r=1;r<e.length;++r)e[r]>t&&(t=e[r]);return t},Ne=function(e,t,r){var i=t/8|0;return(e[i]|e[i+1]<<8)>>(t&7)&r},Ht=function(e,t){var r=t/8|0;return(e[r]|e[r+1]<<8|e[r+2]<<16)>>(t&7)},Zi=function(e){return(e/8|0)+(e&7&&1)},Wi=function(e,t,r){(t==null||t<0)&&(t=0),(r==null||r>e.length)&&(r=e.length);var i=new(e instanceof Qe?Qe:e instanceof er?er:De)(r-t);return i.set(e.subarray(t,r)),i},Xi=function(e,t,r){var i=e.length;if(!i||r&&!r.l&&i<5)return t||new De(0);var s=!t||r,o=!r||r.i;r||(r={}),t||(t=new De(i*3));var l=function(J){var Ge=t.length;if(J>Ge){var Ve=new De(Math.max(Ge*2,J));Ve.set(t),t=Ve}},f=r.f||0,u=r.p||0,d=r.b||0,m=r.l,E=r.d,A=r.m,R=r.n,P=i*8;do{if(!m){r.f=f=Ne(e,u,1);var G=Ne(e,u+1,3);if(u+=3,G)if(G==1)m=Vi,E=ji,A=9,R=5;else if(G==2){var x=Ne(e,u,31)+257,F=Ne(e,u+10,15)+4,z=x+Ne(e,u+5,31)+1;u+=14;for(var B=new De(z),Y=new De(19),H=0;H<F;++H)Y[Oi[H]]=Ne(e,u+H*3,7);u+=F*3;for(var L=Ot(Y),j=(1<<L)-1,U=yt(Y,L,1),H=0;H<z;){var q=U[Ne(e,u,j)];u+=q&15;var W=q>>>4;if(W<16)B[H++]=W;else{var me=0,ue=0;for(W==16?(ue=3+Ne(e,u,3),u+=2,me=B[H-1]):W==17?(ue=3+Ne(e,u,7),u+=3):W==18&&(ue=11+Ne(e,u,127),u+=7);ue--;)B[H++]=me}}var he=B.subarray(0,x),Ie=B.subarray(x);A=Ot(he),R=Ot(Ie),m=yt(he,A,1),E=yt(Ie,R,1)}else throw"invalid block type";else{var W=Zi(u)+4,X=e[W-4]|e[W-3]<<8,O=W+X;if(O>i){if(o)throw"unexpected EOF";break}s&&l(d+X),t.set(e.subarray(W,O),d),r.b=d+=X,r.p=u=O*8;continue}if(u>P){if(o)throw"unexpected EOF";break}}s&&l(d+131072);for(var Te=(1<<A)-1,_e=(1<<R)-1,Xe=u;;Xe=u){var me=m[Ht(e,u)&Te],ge=me>>>4;if(u+=me&15,u>P){if(o)throw"unexpected EOF";break}if(!me)throw"invalid length/literal";if(ge<256)t[d++]=ge;else if(ge==256){Xe=u,m=null;break}else{var at=ge-254;if(ge>264){var H=ge-257,we=Yr[H];at=Ne(e,u,(1<<we)-1)+Jr[H],u+=we}var tt=E[Ht(e,u)&_e],rt=tt>>>4;if(!tt)throw"invalid distance";u+=tt&15;var Ie=Gi[rt];if(rt>3){var we=Kr[rt];Ie+=Ht(e,u)&(1<<we)-1,u+=we}if(u>P){if(o)throw"unexpected EOF";break}s&&l(d+131072);for(var vt=d+at;d<vt;d+=4)t[d]=t[d-Ie],t[d+1]=t[d+1-Ie],t[d+2]=t[d+2-Ie],t[d+3]=t[d+3-Ie];d=vt}}r.l=m,r.p=Xe,r.b=d,m&&(f=1,r.m=A,r.d=E,r.n=R)}while(!f);return d==t.length?t:Wi(t,0,d)},$i=new De(0),Yi=function(e){if((e[0]&15)!=8||e[0]>>>4>7||(e[0]<<8|e[1])%31)throw"invalid zlib data";if(e[1]&32)throw"invalid zlib data: preset dictionaries not supported"};function Ct(e,t){return Xi((Yi(e),e.subarray(2,-4)),t)}var Ki=typeof TextDecoder<"u"&&new TextDecoder,qi=0;try{Ki.decode($i,{stream:!0}),qi=1}catch{}const Qi=e=>e&&e.isCubeTexture;class Ji extends Vr{constructor(t,r){var i,s;const o=Qi(t),f=((s=o?(i=t.image[0])==null?void 0:i.width:t.image.width)!=null?s:1024)/4,u=Math.floor(Math.log2(f)),d=Math.pow(2,u),m=3*Math.max(d,16*7),E=4*d,A=[o?"#define ENVMAP_TYPE_CUBE":"",`#define CUBEUV_TEXEL_WIDTH ${1/m}`,`#define CUBEUV_TEXEL_HEIGHT ${1/E}`,`#define CUBEUV_MAX_MIP ${u}.0`],R=`
        varying vec3 vWorldPosition;
        void main() 
        {
            vec4 worldPosition = ( modelMatrix * vec4( position, 1.0 ) );
            vWorldPosition = worldPosition.xyz;
            
            gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
        }
        `,P=A.join(`
`)+`
        #define ENVMAP_TYPE_CUBE_UV
        varying vec3 vWorldPosition;
        uniform float radius;
        uniform float height;
        uniform float angle;
        #ifdef ENVMAP_TYPE_CUBE
            uniform samplerCube map;
        #else
            uniform sampler2D map;
        #endif
        // From: https://www.shadertoy.com/view/4tsBD7
        float diskIntersectWithBackFaceCulling( vec3 ro, vec3 rd, vec3 c, vec3 n, float r ) 
        {
            float d = dot ( rd, n );
            
            if( d > 0.0 ) { return 1e6; }
            
            vec3  o = ro - c;
            float t = - dot( n, o ) / d;
            vec3  q = o + rd * t;
            
            return ( dot( q, q ) < r * r ) ? t : 1e6;
        }
        // From: https://www.iquilezles.org/www/articles/intersectors/intersectors.htm
        float sphereIntersect( vec3 ro, vec3 rd, vec3 ce, float ra ) 
        {
            vec3 oc = ro - ce;
            float b = dot( oc, rd );
            float c = dot( oc, oc ) - ra * ra;
            float h = b * b - c;
            
            if( h < 0.0 ) { return -1.0; }
            
            h = sqrt( h );
            
            return - b + h;
        }
        vec3 project() 
        {
            vec3 p = normalize( vWorldPosition );
            vec3 camPos = cameraPosition;
            camPos.y -= height;
            float intersection = sphereIntersect( camPos, p, vec3( 0.0 ), radius );
            if( intersection > 0.0 ) {
                
                vec3 h = vec3( 0.0, - height, 0.0 );
                float intersection2 = diskIntersectWithBackFaceCulling( camPos, p, h, vec3( 0.0, 1.0, 0.0 ), radius );
                p = ( camPos + min( intersection, intersection2 ) * p ) / radius;
            } else {
                p = vec3( 0.0, 1.0, 0.0 );
            }
            return p;
        }
        #include <common>
        #include <cube_uv_reflection_fragment>
        void main() 
        {
            vec3 projectedWorldPosition = project();
            
            #ifdef ENVMAP_TYPE_CUBE
                vec3 outcolor = textureCube( map, projectedWorldPosition ).rgb;
            #else
                vec3 direction = normalize( projectedWorldPosition );
                vec2 uv = equirectUv( direction );
                vec3 outcolor = texture2D( map, uv ).rgb;
            #endif
            gl_FragColor = vec4( outcolor, 1.0 );
            #include <tonemapping_fragment>
            #include <${parseInt(Pt.replace(/\D+/g,""))>=154?"colorspace_fragment":"encodings_fragment"}>
        }
        `,G={map:{value:t},height:{value:(r==null?void 0:r.height)||15},radius:{value:(r==null?void 0:r.radius)||100}},W=new Jn(1,16),X=new ke({uniforms:G,fragmentShader:P,vertexShader:R,side:ot});super(W,X)}set radius(t){this.material.uniforms.radius.value=t}get radius(){return this.material.uniforms.radius.value}set height(t){this.material.uniforms.height.value=t}get height(){return this.material.uniforms.height.value}}class ea extends jr{constructor(t){super(t),this.type=Pe}parse(t){const f=function(x,F){switch(x){case 1:console.error("THREE.RGBELoader Read Error: "+(F||""));break;case 2:console.error("THREE.RGBELoader Write Error: "+(F||""));break;case 3:console.error("THREE.RGBELoader Bad File Format: "+(F||""));break;default:case 4:console.error("THREE.RGBELoader: Error: "+(F||""))}return-1},E=`
`,A=function(x,F,z){F=F||1024;let Y=x.pos,H=-1,L=0,j="",U=String.fromCharCode.apply(null,new Uint16Array(x.subarray(Y,Y+128)));for(;0>(H=U.indexOf(E))&&L<F&&Y<x.byteLength;)j+=U,L+=U.length,Y+=128,U+=String.fromCharCode.apply(null,new Uint16Array(x.subarray(Y,Y+128)));return-1<H?(z!==!1&&(x.pos+=L+H+1),j+U.slice(0,H)):!1},R=function(x){const F=/^#\?(\S+)/,z=/^\s*GAMMA\s*=\s*(\d+(\.\d+)?)\s*$/,B=/^\s*EXPOSURE\s*=\s*(\d+(\.\d+)?)\s*$/,Y=/^\s*FORMAT=(\S+)\s*$/,H=/^\s*\-Y\s+(\d+)\s+\+X\s+(\d+)\s*$/,L={valid:0,string:"",comments:"",programtype:"RGBE",format:"",gamma:1,exposure:1,width:0,height:0};let j,U;if(x.pos>=x.byteLength||!(j=A(x)))return f(1,"no header found");if(!(U=j.match(F)))return f(3,"bad initial token");for(L.valid|=1,L.programtype=U[1],L.string+=j+`
`;j=A(x),j!==!1;){if(L.string+=j+`
`,j.charAt(0)==="#"){L.comments+=j+`
`;continue}if((U=j.match(z))&&(L.gamma=parseFloat(U[1])),(U=j.match(B))&&(L.exposure=parseFloat(U[1])),(U=j.match(Y))&&(L.valid|=2,L.format=U[1]),(U=j.match(H))&&(L.valid|=4,L.height=parseInt(U[1],10),L.width=parseInt(U[2],10)),L.valid&2&&L.valid&4)break}return L.valid&2?L.valid&4?L:f(3,"missing image size specifier"):f(3,"missing format specifier")},P=function(x,F,z){const B=F;if(B<8||B>32767||x[0]!==2||x[1]!==2||x[2]&128)return new Uint8Array(x);if(B!==(x[2]<<8|x[3]))return f(3,"wrong scanline width");const Y=new Uint8Array(4*F*z);if(!Y.length)return f(4,"unable to allocate buffer space");let H=0,L=0;const j=4*B,U=new Uint8Array(4),q=new Uint8Array(j);let me=z;for(;me>0&&L<x.byteLength;){if(L+4>x.byteLength)return f(1);if(U[0]=x[L++],U[1]=x[L++],U[2]=x[L++],U[3]=x[L++],U[0]!=2||U[1]!=2||(U[2]<<8|U[3])!=B)return f(3,"bad rgbe scanline format");let ue=0,he;for(;ue<j&&L<x.byteLength;){he=x[L++];const Te=he>128;if(Te&&(he-=128),he===0||ue+he>j)return f(3,"bad scanline data");if(Te){const _e=x[L++];for(let Xe=0;Xe<he;Xe++)q[ue++]=_e}else q.set(x.subarray(L,L+he),ue),ue+=he,L+=he}const Ie=B;for(let Te=0;Te<Ie;Te++){let _e=0;Y[H]=q[Te+_e],_e+=B,Y[H+1]=q[Te+_e],_e+=B,Y[H+2]=q[Te+_e],_e+=B,Y[H+3]=q[Te+_e],H+=4}me--}return Y},G=function(x,F,z,B){const Y=x[F+3],H=Math.pow(2,Y-128)/255;z[B+0]=x[F+0]*H,z[B+1]=x[F+1]*H,z[B+2]=x[F+2]*H,z[B+3]=1},W=function(x,F,z,B){const Y=x[F+3],H=Math.pow(2,Y-128)/255;z[B+0]=lt.toHalfFloat(Math.min(x[F+0]*H,65504)),z[B+1]=lt.toHalfFloat(Math.min(x[F+1]*H,65504)),z[B+2]=lt.toHalfFloat(Math.min(x[F+2]*H,65504)),z[B+3]=lt.toHalfFloat(1)},X=new Uint8Array(t);X.pos=0;const O=R(X);if(O!==-1){const x=O.width,F=O.height,z=P(X.subarray(X.pos),x,F);if(z!==-1){let B,Y,H;switch(this.type){case xe:H=z.length/4;const L=new Float32Array(H*4);for(let U=0;U<H;U++)G(z,U*4,L,U*4);B=L,Y=xe;break;case Pe:H=z.length/4;const j=new Uint16Array(H*4);for(let U=0;U<H;U++)W(z,U*4,j,U*4);B=j,Y=Pe;break;default:console.error("THREE.RGBELoader: unsupported type: ",this.type);break}return{width:x,height:F,data:B,header:O.string,gamma:O.gamma,exposure:O.exposure,type:Y}}}return null}setDataType(t){return this.type=t,this}load(t,r,i,s){function o(l,f){switch(l.type){case xe:case Pe:"colorSpace"in l?l.colorSpace="srgb-linear":l.encoding=3e3,l.minFilter=Me,l.magFilter=Me,l.generateMipmaps=!1,l.flipY=!0;break}r&&r(l,f)}return super.load(t,o,i,s)}}const Tt="colorSpace"in new nr;class ta extends jr{constructor(t){super(t),this.type=Pe}parse(t){const L=Math.pow(2.7182818,2.2);function j(n,a){for(var c=0,h=0;h<65536;++h)(h==0||n[h>>3]&1<<(h&7))&&(a[c++]=h);for(var v=c-1;c<65536;)a[c++]=0;return v}function U(n){for(var a=0;a<16384;a++)n[a]={},n[a].len=0,n[a].lit=0,n[a].p=null}const q={l:0,c:0,lc:0};function me(n,a,c,h,v){for(;c<n;)a=a<<8|_r(h,v),c+=8;c-=n,q.l=a>>c&(1<<n)-1,q.c=a,q.lc=c}const ue=new Array(59);function he(n){for(var a=0;a<=58;++a)ue[a]=0;for(var a=0;a<65537;++a)ue[n[a]]+=1;for(var c=0,a=58;a>0;--a){var h=c+ue[a]>>1;ue[a]=c,c=h}for(var a=0;a<65537;++a){var v=n[a];v>0&&(n[a]=v|ue[v]++<<6)}}function Ie(n,a,c,h,v,p,S){for(var g=c,w=0,_=0;v<=p;v++){if(g.value-c.value>h)return!1;me(6,w,_,n,g);var y=q.l;if(w=q.c,_=q.lc,S[v]=y,y==63){if(g.value-c.value>h)throw"Something wrong with hufUnpackEncTable";me(8,w,_,n,g);var T=q.l+6;if(w=q.c,_=q.lc,v+T>p+1)throw"Something wrong with hufUnpackEncTable";for(;T--;)S[v++]=0;v--}else if(y>=59){var T=y-59+2;if(v+T>p+1)throw"Something wrong with hufUnpackEncTable";for(;T--;)S[v++]=0;v--}}he(S)}function Te(n){return n&63}function _e(n){return n>>6}function Xe(n,a,c,h){for(;a<=c;a++){var v=_e(n[a]),p=Te(n[a]);if(v>>p)throw"Invalid table entry";if(p>14){var S=h[v>>p-14];if(S.len)throw"Invalid table entry";if(S.lit++,S.p){var g=S.p;S.p=new Array(S.lit);for(var w=0;w<S.lit-1;++w)S.p[w]=g[w]}else S.p=new Array(1);S.p[S.lit-1]=a}else if(p)for(var _=0,w=1<<14-p;w>0;w--){var S=h[(v<<14-p)+_];if(S.len||S.p)throw"Invalid table entry";S.len=p,S.lit=a,_++}}return!0}const ge={c:0,lc:0};function at(n,a,c,h){n=n<<8|_r(c,h),a+=8,ge.c=n,ge.lc=a}const we={c:0,lc:0};function tt(n,a,c,h,v,p,S,g,w,_){if(n==a){h<8&&(at(c,h,v,S),c=ge.c,h=ge.lc),h-=8;var y=c>>h,y=new Uint8Array([y])[0];if(w.value+y>_)return!1;for(var T=g[w.value-1];y-- >0;)g[w.value++]=T}else if(w.value<_)g[w.value++]=n;else return!1;we.c=c,we.lc=h}function rt(n){return n&65535}function vt(n){var a=rt(n);return a>32767?a-65536:a}const J={a:0,b:0};function Ge(n,a){var c=vt(n),h=vt(a),v=h,p=c+(v&1)+(v>>1),S=p,g=p-v;J.a=S,J.b=g}function Ve(n,a){var c=rt(n),h=rt(a),v=c-(h>>1)&65535,p=h+v-32768&65535;J.a=p,J.b=v}function gn(n,a,c,h,v,p,S){for(var g=S<16384,w=c>v?v:c,_=1,y;_<=w;)_<<=1;for(_>>=1,y=_,_>>=1;_>=1;){for(var T=0,oe=T+p*(v-y),I=p*_,D=p*y,k=h*_,Z=h*y,ee,re,ce,Se;T<=oe;T+=D){for(var ne=T,ze=T+h*(c-y);ne<=ze;ne+=Z){var ie=ne+k,fe=ne+I,je=fe+k;g?(Ge(n[ne+a],n[fe+a]),ee=J.a,ce=J.b,Ge(n[ie+a],n[je+a]),re=J.a,Se=J.b,Ge(ee,re),n[ne+a]=J.a,n[ie+a]=J.b,Ge(ce,Se),n[fe+a]=J.a,n[je+a]=J.b):(Ve(n[ne+a],n[fe+a]),ee=J.a,ce=J.b,Ve(n[ie+a],n[je+a]),re=J.a,Se=J.b,Ve(ee,re),n[ne+a]=J.a,n[ie+a]=J.b,Ve(ce,Se),n[fe+a]=J.a,n[je+a]=J.b)}if(c&_){var fe=ne+I;g?Ge(n[ne+a],n[fe+a]):Ve(n[ne+a],n[fe+a]),ee=J.a,n[fe+a]=J.b,n[ne+a]=ee}}if(v&_)for(var ne=T,ze=T+h*(c-y);ne<=ze;ne+=Z){var ie=ne+k;g?Ge(n[ne+a],n[ie+a]):Ve(n[ne+a],n[ie+a]),ee=J.a,n[ie+a]=J.b,n[ne+a]=ee}y=_,_>>=1}return T}function Sn(n,a,c,h,v,p,S,g,w,_){for(var y=0,T=0,oe=g,I=Math.trunc(v.value+(p+7)/8);v.value<I;)for(at(y,T,c,v),y=ge.c,T=ge.lc;T>=14;){var D=y>>T-14&16383,k=a[D];if(k.len)T-=k.len,tt(k.lit,S,y,T,c,h,v,w,_,oe),y=we.c,T=we.lc;else{if(!k.p)throw"hufDecode issues";var Z;for(Z=0;Z<k.lit;Z++){for(var ee=Te(n[k.p[Z]]);T<ee&&v.value<I;)at(y,T,c,v),y=ge.c,T=ge.lc;if(T>=ee&&_e(n[k.p[Z]])==(y>>T-ee&(1<<ee)-1)){T-=ee,tt(k.p[Z],S,y,T,c,h,v,w,_,oe),y=we.c,T=we.lc;break}}if(Z==k.lit)throw"hufDecode issues"}}var re=8-p&7;for(y>>=re,T-=re;T>0;){var k=a[y<<14-T&16383];if(k.len)T-=k.len,tt(k.lit,S,y,T,c,h,v,w,_,oe),y=we.c,T=we.lc;else throw"hufDecode issues"}return!0}function mr(n,a,c,h,v,p){var S={value:0},g=c.value,w=ye(a,c),_=ye(a,c);c.value+=4;var y=ye(a,c);if(c.value+=4,w<0||w>=65537||_<0||_>=65537)throw"Something wrong with HUF_ENCSIZE";var T=new Array(65537),oe=new Array(16384);U(oe);var I=h-(c.value-g);if(Ie(n,a,c,I,w,_,T),y>8*(h-(c.value-g)))throw"Something wrong with hufUncompress";Xe(T,w,_,oe),Sn(T,oe,n,a,c,y,_,p,v,S)}function xn(n,a,c){for(var h=0;h<c;++h)a[h]=n[a[h]]}function gr(n){for(var a=1;a<n.length;a++){var c=n[a-1]+n[a]-128;n[a]=c}}function Sr(n,a){for(var c=0,h=Math.floor((n.length+1)/2),v=0,p=n.length-1;!(v>p||(a[v++]=n[c++],v>p));)a[v++]=n[h++]}function xr(n){for(var a=n.byteLength,c=new Array,h=0,v=new DataView(n);a>0;){var p=v.getInt8(h++);if(p<0){var S=-p;a-=S+1;for(var g=0;g<S;g++)c.push(v.getUint8(h++))}else{var S=p;a-=2;for(var w=v.getUint8(h++),g=0;g<S+1;g++)c.push(w)}}return c}function En(n,a,c,h,v,p){var ie=new DataView(p.buffer),S=c[n.idx[0]].width,g=c[n.idx[0]].height,w=3,_=Math.floor(S/8),y=Math.ceil(S/8),T=Math.ceil(g/8),oe=S-(y-1)*8,I=g-(T-1)*8,D={value:0},k=new Array(w),Z=new Array(w),ee=new Array(w),re=new Array(w),ce=new Array(w);for(let te=0;te<w;++te)ce[te]=a[n.idx[te]],k[te]=te<1?0:k[te-1]+y*T,Z[te]=new Float32Array(64),ee[te]=new Uint16Array(64),re[te]=new Uint16Array(y*64);for(let te=0;te<T;++te){var Se=8;te==T-1&&(Se=I);var ne=8;for(let se=0;se<y;++se){se==y-1&&(ne=oe);for(let Q=0;Q<w;++Q)ee[Q].fill(0),ee[Q][0]=v[k[Q]++],Tn(D,h,ee[Q]),_n(ee[Q],Z[Q]),wn(Z[Q]);yn(Z);for(let Q=0;Q<w;++Q)Mn(Z[Q],re[Q],se*64)}let ve=0;for(let se=0;se<w;++se){const Q=c[n.idx[se]].type;for(let Be=8*te;Be<8*te+Se;++Be){ve=ce[se][Be];for(let nt=0;nt<_;++nt){const be=nt*64+(Be&7)*8;ie.setUint16(ve+0*2*Q,re[se][be+0],!0),ie.setUint16(ve+1*2*Q,re[se][be+1],!0),ie.setUint16(ve+2*2*Q,re[se][be+2],!0),ie.setUint16(ve+3*2*Q,re[se][be+3],!0),ie.setUint16(ve+4*2*Q,re[se][be+4],!0),ie.setUint16(ve+5*2*Q,re[se][be+5],!0),ie.setUint16(ve+6*2*Q,re[se][be+6],!0),ie.setUint16(ve+7*2*Q,re[se][be+7],!0),ve+=8*2*Q}}if(_!=y)for(let Be=8*te;Be<8*te+Se;++Be){const nt=ce[se][Be]+8*_*2*Q,be=_*64+(Be&7)*8;for(let $e=0;$e<ne;++$e)ie.setUint16(nt+$e*2*Q,re[se][be+$e],!0)}}}for(var ze=new Uint16Array(S),ie=new DataView(p.buffer),fe=0;fe<w;++fe){c[n.idx[fe]].decoded=!0;var je=c[n.idx[fe]].type;if(c[fe].type==2)for(var xt=0;xt<g;++xt){const te=ce[fe][xt];for(var Ce=0;Ce<S;++Ce)ze[Ce]=ie.getUint16(te+Ce*2*je,!0);for(var Ce=0;Ce<S;++Ce)ie.setFloat32(te+Ce*2*je,M(ze[Ce]),!0)}}}function Tn(n,a,c){for(var h,v=1;v<64;)h=a[n.value],h==65280?v=64:h>>8==255?v+=h&255:(c[v]=h,v++),n.value++}function _n(n,a){a[0]=M(n[0]),a[1]=M(n[1]),a[2]=M(n[5]),a[3]=M(n[6]),a[4]=M(n[14]),a[5]=M(n[15]),a[6]=M(n[27]),a[7]=M(n[28]),a[8]=M(n[2]),a[9]=M(n[4]),a[10]=M(n[7]),a[11]=M(n[13]),a[12]=M(n[16]),a[13]=M(n[26]),a[14]=M(n[29]),a[15]=M(n[42]),a[16]=M(n[3]),a[17]=M(n[8]),a[18]=M(n[12]),a[19]=M(n[17]),a[20]=M(n[25]),a[21]=M(n[30]),a[22]=M(n[41]),a[23]=M(n[43]),a[24]=M(n[9]),a[25]=M(n[11]),a[26]=M(n[18]),a[27]=M(n[24]),a[28]=M(n[31]),a[29]=M(n[40]),a[30]=M(n[44]),a[31]=M(n[53]),a[32]=M(n[10]),a[33]=M(n[19]),a[34]=M(n[23]),a[35]=M(n[32]),a[36]=M(n[39]),a[37]=M(n[45]),a[38]=M(n[52]),a[39]=M(n[54]),a[40]=M(n[20]),a[41]=M(n[22]),a[42]=M(n[33]),a[43]=M(n[38]),a[44]=M(n[46]),a[45]=M(n[51]),a[46]=M(n[55]),a[47]=M(n[60]),a[48]=M(n[21]),a[49]=M(n[34]),a[50]=M(n[37]),a[51]=M(n[47]),a[52]=M(n[50]),a[53]=M(n[56]),a[54]=M(n[59]),a[55]=M(n[61]),a[56]=M(n[35]),a[57]=M(n[36]),a[58]=M(n[48]),a[59]=M(n[49]),a[60]=M(n[57]),a[61]=M(n[58]),a[62]=M(n[62]),a[63]=M(n[63])}function wn(n){const a=.5*Math.cos(.7853975),c=.5*Math.cos(3.14159/16),h=.5*Math.cos(3.14159/8),v=.5*Math.cos(3*3.14159/16),p=.5*Math.cos(5*3.14159/16),S=.5*Math.cos(3*3.14159/8),g=.5*Math.cos(7*3.14159/16);for(var w=new Array(4),_=new Array(4),y=new Array(4),T=new Array(4),oe=0;oe<8;++oe){var I=oe*8;w[0]=h*n[I+2],w[1]=S*n[I+2],w[2]=h*n[I+6],w[3]=S*n[I+6],_[0]=c*n[I+1]+v*n[I+3]+p*n[I+5]+g*n[I+7],_[1]=v*n[I+1]-g*n[I+3]-c*n[I+5]-p*n[I+7],_[2]=p*n[I+1]-c*n[I+3]+g*n[I+5]+v*n[I+7],_[3]=g*n[I+1]-p*n[I+3]+v*n[I+5]-c*n[I+7],y[0]=a*(n[I+0]+n[I+4]),y[3]=a*(n[I+0]-n[I+4]),y[1]=w[0]+w[3],y[2]=w[1]-w[2],T[0]=y[0]+y[1],T[1]=y[3]+y[2],T[2]=y[3]-y[2],T[3]=y[0]-y[1],n[I+0]=T[0]+_[0],n[I+1]=T[1]+_[1],n[I+2]=T[2]+_[2],n[I+3]=T[3]+_[3],n[I+4]=T[3]-_[3],n[I+5]=T[2]-_[2],n[I+6]=T[1]-_[1],n[I+7]=T[0]-_[0]}for(var D=0;D<8;++D)w[0]=h*n[16+D],w[1]=S*n[16+D],w[2]=h*n[48+D],w[3]=S*n[48+D],_[0]=c*n[8+D]+v*n[24+D]+p*n[40+D]+g*n[56+D],_[1]=v*n[8+D]-g*n[24+D]-c*n[40+D]-p*n[56+D],_[2]=p*n[8+D]-c*n[24+D]+g*n[40+D]+v*n[56+D],_[3]=g*n[8+D]-p*n[24+D]+v*n[40+D]-c*n[56+D],y[0]=a*(n[D]+n[32+D]),y[3]=a*(n[D]-n[32+D]),y[1]=w[0]+w[3],y[2]=w[1]-w[2],T[0]=y[0]+y[1],T[1]=y[3]+y[2],T[2]=y[3]-y[2],T[3]=y[0]-y[1],n[0+D]=T[0]+_[0],n[8+D]=T[1]+_[1],n[16+D]=T[2]+_[2],n[24+D]=T[3]+_[3],n[32+D]=T[3]-_[3],n[40+D]=T[2]-_[2],n[48+D]=T[1]-_[1],n[56+D]=T[0]-_[0]}function yn(n){for(var a=0;a<64;++a){var c=n[0][a],h=n[1][a],v=n[2][a];n[0][a]=c+1.5747*v,n[1][a]=c-.1873*h-.4682*v,n[2][a]=c+1.8556*h}}function Mn(n,a,c){for(var h=0;h<64;++h)a[c+h]=lt.toHalfFloat(Rn(n[h]))}function Rn(n){return n<=1?Math.sign(n)*Math.pow(Math.abs(n),2.2):Math.sign(n)*Math.pow(L,Math.abs(n)-1)}function Er(n){return new DataView(n.array.buffer,n.offset.value,n.size)}function bn(n){var a=n.viewer.buffer.slice(n.offset.value,n.offset.value+n.size),c=new Uint8Array(xr(a)),h=new Uint8Array(c.length);return gr(c),Sr(c,h),new DataView(h.buffer)}function Ft(n){var a=n.array.slice(n.offset.value,n.offset.value+n.size),c=Ct(a),h=new Uint8Array(c.length);return gr(c),Sr(c,h),new DataView(h.buffer)}function An(n){for(var a=n.viewer,c={value:n.offset.value},h=new Uint16Array(n.width*n.scanlineBlockSize*(n.channels*n.type)),v=new Uint8Array(8192),p=0,S=new Array(n.channels),g=0;g<n.channels;g++)S[g]={},S[g].start=p,S[g].end=S[g].start,S[g].nx=n.width,S[g].ny=n.lines,S[g].size=n.type,p+=S[g].nx*S[g].ny*S[g].size;var w=mt(a,c),_=mt(a,c);if(_>=8192)throw"Something is wrong with PIZ_COMPRESSION BITMAP_SIZE";if(w<=_)for(var g=0;g<_-w+1;g++)v[g+w]=st(a,c);var y=new Uint16Array(65536),T=j(v,y),oe=ye(a,c);mr(n.array,a,c,oe,h,p);for(var g=0;g<n.channels;++g)for(var I=S[g],D=0;D<S[g].size;++D)gn(h,I.start+D,I.nx,I.size,I.ny,I.nx*I.size,T);xn(y,h,p);for(var k=0,Z=new Uint8Array(h.buffer.byteLength),ee=0;ee<n.lines;ee++)for(var re=0;re<n.channels;re++){var I=S[re],ce=I.nx*I.size,Se=new Uint8Array(h.buffer,I.end*2,ce*2);Z.set(Se,k),k+=ce*2,I.end+=ce}return new DataView(Z.buffer)}function In(n){var a=n.array.slice(n.offset.value,n.offset.value+n.size),c=Ct(a);const h=n.lines*n.channels*n.width,v=n.type==1?new Uint16Array(h):new Uint32Array(h);let p=0,S=0;const g=new Array(4);for(let w=0;w<n.lines;w++)for(let _=0;_<n.channels;_++){let y=0;switch(n.type){case 1:g[0]=p,g[1]=g[0]+n.width,p=g[1]+n.width;for(let T=0;T<n.width;++T){const oe=c[g[0]++]<<8|c[g[1]++];y+=oe,v[S]=y,S++}break;case 2:g[0]=p,g[1]=g[0]+n.width,g[2]=g[1]+n.width,p=g[2]+n.width;for(let T=0;T<n.width;++T){const oe=c[g[0]++]<<24|c[g[1]++]<<16|c[g[2]++]<<8;y+=oe,v[S]=y,S++}break}}return new DataView(v.buffer)}function Tr(n){var a=n.viewer,c={value:n.offset.value},h=new Uint8Array(n.width*n.lines*(n.channels*n.type*2)),v={version:Ue(a,c),unknownUncompressedSize:Ue(a,c),unknownCompressedSize:Ue(a,c),acCompressedSize:Ue(a,c),dcCompressedSize:Ue(a,c),rleCompressedSize:Ue(a,c),rleUncompressedSize:Ue(a,c),rleRawSize:Ue(a,c),totalAcUncompressedCount:Ue(a,c),totalDcUncompressedCount:Ue(a,c),acCompression:Ue(a,c)};if(v.version<2)throw"EXRLoader.parse: "+St.compression+" version "+v.version+" is unsupported";for(var p=new Array,S=mt(a,c)-2;S>0;){var g=At(a.buffer,c),w=st(a,c),_=w>>2&3,y=(w>>4)-1,T=new Int8Array([y])[0],oe=st(a,c);p.push({name:g,index:T,type:oe,compression:_}),S-=g.length+3}for(var I=St.channels,D=new Array(n.channels),k=0;k<n.channels;++k){var Z=D[k]={},ee=I[k];Z.name=ee.name,Z.compression=0,Z.decoded=!1,Z.type=ee.pixelType,Z.pLinear=ee.pLinear,Z.width=n.width,Z.height=n.lines}for(var re={idx:new Array(3)},ce=0;ce<n.channels;++ce)for(var Z=D[ce],k=0;k<p.length;++k){var Se=p[k];Z.name==Se.name&&(Z.compression=Se.compression,Se.index>=0&&(re.idx[Se.index]=ce),Z.offset=ce)}if(v.acCompressedSize>0)switch(v.acCompression){case 0:var ie=new Uint16Array(v.totalAcUncompressedCount);mr(n.array,a,c,v.acCompressedSize,ie,v.totalAcUncompressedCount);break;case 1:var ne=n.array.slice(c.value,c.value+v.totalAcUncompressedCount),ze=Ct(ne),ie=new Uint16Array(ze.buffer);c.value+=v.totalAcUncompressedCount;break}if(v.dcCompressedSize>0){var fe={array:n.array,offset:c,size:v.dcCompressedSize},je=new Uint16Array(Ft(fe).buffer);c.value+=v.dcCompressedSize}if(v.rleRawSize>0){var ne=n.array.slice(c.value,c.value+v.rleCompressedSize),ze=Ct(ne),xt=xr(ze.buffer);c.value+=v.rleCompressedSize}for(var Ce=0,te=new Array(D.length),k=0;k<te.length;++k)te[k]=new Array;for(var ve=0;ve<n.lines;++ve)for(var se=0;se<D.length;++se)te[se].push(Ce),Ce+=D[se].width*n.type*2;En(re,te,D,ie,je,h);for(var k=0;k<D.length;++k){var Z=D[k];if(!Z.decoded)switch(Z.compression){case 2:for(var Q=0,Be=0,ve=0;ve<n.lines;++ve){for(var nt=te[k][Q],be=0;be<Z.width;++be){for(var $e=0;$e<2*Z.type;++$e)h[nt++]=xt[Be+$e*Z.width*Z.height];Be++}Q++}break;case 1:default:throw"EXRLoader.parse: unsupported channel compression"}}return new DataView(h.buffer)}function At(n,a){for(var c=new Uint8Array(n),h=0;c[a.value+h]!=0;)h+=1;var v=new TextDecoder().decode(c.slice(a.value,a.value+h));return a.value=a.value+h+1,v}function Un(n,a,c){var h=new TextDecoder().decode(new Uint8Array(n).slice(a.value,a.value+c));return a.value=a.value+c,h}function Cn(n,a){var c=pt(n,a),h=ye(n,a);return[c,h]}function Bn(n,a){var c=ye(n,a),h=ye(n,a);return[c,h]}function pt(n,a){var c=n.getInt32(a.value,!0);return a.value=a.value+4,c}function ye(n,a){var c=n.getUint32(a.value,!0);return a.value=a.value+4,c}function _r(n,a){var c=n[a.value];return a.value=a.value+1,c}function st(n,a){var c=n.getUint8(a.value);return a.value=a.value+1,c}const Ue=function(n,a){let c;return"getBigInt64"in DataView.prototype?c=Number(n.getBigInt64(a.value,!0)):c=n.getUint32(a.value+4,!0)+Number(n.getUint32(a.value,!0)<<32),a.value+=8,c};function de(n,a){var c=n.getFloat32(a.value,!0);return a.value+=4,c}function Dn(n,a){return lt.toHalfFloat(de(n,a))}function M(n){var a=(n&31744)>>10,c=n&1023;return(n>>15?-1:1)*(a?a===31?c?NaN:1/0:Math.pow(2,a-15)*(1+c/1024):6103515625e-14*(c/1024))}function mt(n,a){var c=n.getUint16(a.value,!0);return a.value+=2,c}function Ln(n,a){return M(mt(n,a))}function Nn(n,a,c,h){for(var v=c.value,p=[];c.value<v+h-1;){var S=At(a,c),g=pt(n,c),w=st(n,c);c.value+=3;var _=pt(n,c),y=pt(n,c);p.push({name:S,pixelType:g,pLinear:w,xSampling:_,ySampling:y})}return c.value+=1,p}function Pn(n,a){var c=de(n,a),h=de(n,a),v=de(n,a),p=de(n,a),S=de(n,a),g=de(n,a),w=de(n,a),_=de(n,a);return{redX:c,redY:h,greenX:v,greenY:p,blueX:S,blueY:g,whiteX:w,whiteY:_}}function Fn(n,a){var c=["NO_COMPRESSION","RLE_COMPRESSION","ZIPS_COMPRESSION","ZIP_COMPRESSION","PIZ_COMPRESSION","PXR24_COMPRESSION","B44_COMPRESSION","B44A_COMPRESSION","DWAA_COMPRESSION","DWAB_COMPRESSION"],h=st(n,a);return c[h]}function zn(n,a){var c=ye(n,a),h=ye(n,a),v=ye(n,a),p=ye(n,a);return{xMin:c,yMin:h,xMax:v,yMax:p}}function On(n,a){var c=["INCREASING_Y"],h=st(n,a);return c[h]}function Hn(n,a){var c=de(n,a),h=de(n,a);return[c,h]}function kn(n,a){var c=de(n,a),h=de(n,a),v=de(n,a);return[c,h,v]}function Gn(n,a,c,h,v){if(h==="string"||h==="stringvector"||h==="iccProfile")return Un(a,c,v);if(h==="chlist")return Nn(n,a,c,v);if(h==="chromaticities")return Pn(n,c);if(h==="compression")return Fn(n,c);if(h==="box2i")return zn(n,c);if(h==="lineOrder")return On(n,c);if(h==="float")return de(n,c);if(h==="v2f")return Hn(n,c);if(h==="v3f")return kn(n,c);if(h==="int")return pt(n,c);if(h==="rational")return Cn(n,c);if(h==="timecode")return Bn(n,c);if(h==="preview")return c.value+=v,"skipped";c.value+=v}function Vn(n,a,c){const h={};if(n.getUint32(0,!0)!=20000630)throw"THREE.EXRLoader: provided file doesn't appear to be in OpenEXR format.";h.version=n.getUint8(4);const v=n.getUint8(5);h.spec={singleTile:!!(v&2),longName:!!(v&4),deepFormat:!!(v&8),multiPart:!!(v&16)},c.value=8;for(var p=!0;p;){var S=At(a,c);if(S==0)p=!1;else{var g=At(a,c),w=ye(n,c),_=Gn(n,a,c,g,w);_===void 0?console.warn(`EXRLoader.parse: skipped unknown header attribute type '${g}'.`):h[S]=_}}if(v&-5)throw console.error("EXRHeader:",h),"THREE.EXRLoader: provided file is currently unsupported.";return h}function jn(n,a,c,h,v){const p={size:0,viewer:a,array:c,offset:h,width:n.dataWindow.xMax-n.dataWindow.xMin+1,height:n.dataWindow.yMax-n.dataWindow.yMin+1,channels:n.channels.length,bytesPerLine:null,lines:null,inputSize:null,type:n.channels[0].pixelType,uncompress:null,getter:null,format:null,[Tt?"colorSpace":"encoding"]:null};switch(n.compression){case"NO_COMPRESSION":p.lines=1,p.uncompress=Er;break;case"RLE_COMPRESSION":p.lines=1,p.uncompress=bn;break;case"ZIPS_COMPRESSION":p.lines=1,p.uncompress=Ft;break;case"ZIP_COMPRESSION":p.lines=16,p.uncompress=Ft;break;case"PIZ_COMPRESSION":p.lines=32,p.uncompress=An;break;case"PXR24_COMPRESSION":p.lines=16,p.uncompress=In;break;case"DWAA_COMPRESSION":p.lines=32,p.uncompress=Tr;break;case"DWAB_COMPRESSION":p.lines=256,p.uncompress=Tr;break;default:throw"EXRLoader.parse: "+n.compression+" is unsupported"}if(p.scanlineBlockSize=p.lines,p.type==1)switch(v){case xe:p.getter=Ln,p.inputSize=2;break;case Pe:p.getter=mt,p.inputSize=2;break}else if(p.type==2)switch(v){case xe:p.getter=de,p.inputSize=4;break;case Pe:p.getter=Dn,p.inputSize=4}else throw"EXRLoader.parse: unsupported pixelType "+p.type+" for "+n.compression+".";p.blockCount=(n.dataWindow.yMax+1)/p.scanlineBlockSize;for(var S=0;S<p.blockCount;S++)Ue(a,h);p.outputChannels=p.channels==3?4:p.channels;const g=p.width*p.height*p.outputChannels;switch(v){case xe:p.byteArray=new Float32Array(g),p.channels<p.outputChannels&&p.byteArray.fill(1,0,g);break;case Pe:p.byteArray=new Uint16Array(g),p.channels<p.outputChannels&&p.byteArray.fill(15360,0,g);break;default:console.error("THREE.EXRLoader: unsupported type: ",v);break}return p.bytesPerLine=p.width*p.inputSize*p.channels,p.outputChannels==4?p.format=Dt:p.format=ei,Tt?p.colorSpace="srgb-linear":p.encoding=3e3,p}const It=new DataView(t),Zn=new Uint8Array(t),gt={value:0},St=Vn(It,t,gt),$=jn(St,It,Zn,gt,this.type),wr={value:0},Wn={R:0,G:1,B:2,A:3,Y:0};for(let n=0;n<$.height/$.scanlineBlockSize;n++){const a=ye(It,gt);$.size=ye(It,gt),$.lines=a+$.scanlineBlockSize>$.height?$.height-a:$.scanlineBlockSize;const h=$.size<$.lines*$.bytesPerLine?$.uncompress($):Er($);gt.value+=$.size;for(let v=0;v<$.scanlineBlockSize;v++){const p=v+n*$.scanlineBlockSize;if(p>=$.height)break;for(let S=0;S<$.channels;S++){const g=Wn[St.channels[S].name];for(let w=0;w<$.width;w++){wr.value=(v*($.channels*$.width)+S*$.width+w)*$.inputSize;const _=($.height-1-p)*($.width*$.outputChannels)+w*$.outputChannels+g;$.byteArray[_]=$.getter(h,wr)}}}}return{header:St,width:$.width,height:$.height,data:$.byteArray,format:$.format,[Tt?"colorSpace":"encoding"]:$[Tt?"colorSpace":"encoding"],type:this.type}}setDataType(t){return this.type=t,this}load(t,r,i,s){function o(l,f){Tt?l.colorSpace=f.colorSpace:l.encoding=f.encoding,l.minFilter=Me,l.magFilter=Me,l.generateMipmaps=!1,l.flipY=!1,r&&r(l,f)}return super.load(t,o,i,s)}}const ra=Pi({},"void main() { }","void main() { gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0); discard;  }");class na extends ri{constructor(t=6,r=!1){super(),this.uniforms={chromaticAberration:{value:.05},transmission:{value:0},_transmission:{value:1},transmissionMap:{value:null},roughness:{value:0},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:1/0},attenuationColor:{value:new ft("white")},anisotropicBlur:{value:.1},time:{value:0},distortion:{value:0},distortionScale:{value:.5},temporalDistortion:{value:0},buffer:{value:null}},this.onBeforeCompile=i=>{i.uniforms={...i.uniforms,...this.uniforms},this.anisotropy>0&&(i.defines.USE_ANISOTROPY=""),r?i.defines.USE_SAMPLER="":i.defines.USE_TRANSMISSION="",i.fragmentShader=`
      uniform float chromaticAberration;         
      uniform float anisotropicBlur;      
      uniform float time;
      uniform float distortion;
      uniform float distortionScale;
      uniform float temporalDistortion;
      uniform sampler2D buffer;

      vec3 random3(vec3 c) {
        float j = 4096.0*sin(dot(c,vec3(17.0, 59.4, 15.0)));
        vec3 r;
        r.z = fract(512.0*j);
        j *= .125;
        r.x = fract(512.0*j);
        j *= .125;
        r.y = fract(512.0*j);
        return r-0.5;
      }

      uint hash( uint x ) {
        x += ( x << 10u );
        x ^= ( x >>  6u );
        x += ( x <<  3u );
        x ^= ( x >> 11u );
        x += ( x << 15u );
        return x;
      }

      // Compound versions of the hashing algorithm I whipped together.
      uint hash( uvec2 v ) { return hash( v.x ^ hash(v.y)                         ); }
      uint hash( uvec3 v ) { return hash( v.x ^ hash(v.y) ^ hash(v.z)             ); }
      uint hash( uvec4 v ) { return hash( v.x ^ hash(v.y) ^ hash(v.z) ^ hash(v.w) ); }

      // Construct a float with half-open range [0:1] using low 23 bits.
      // All zeroes yields 0.0, all ones yields the next smallest representable value below 1.0.
      float floatConstruct( uint m ) {
        const uint ieeeMantissa = 0x007FFFFFu; // binary32 mantissa bitmask
        const uint ieeeOne      = 0x3F800000u; // 1.0 in IEEE binary32
        m &= ieeeMantissa;                     // Keep only mantissa bits (fractional part)
        m |= ieeeOne;                          // Add fractional part to 1.0
        float  f = uintBitsToFloat( m );       // Range [1:2]
        return f - 1.0;                        // Range [0:1]
      }

      // Pseudo-random value in half-open range [0:1].
      float randomBase( float x ) { return floatConstruct(hash(floatBitsToUint(x))); }
      float randomBase( vec2  v ) { return floatConstruct(hash(floatBitsToUint(v))); }
      float randomBase( vec3  v ) { return floatConstruct(hash(floatBitsToUint(v))); }
      float randomBase( vec4  v ) { return floatConstruct(hash(floatBitsToUint(v))); }
      float rand(float seed) {
        float result = randomBase(vec3(gl_FragCoord.xy, seed));
        return result;
      }

      const float F3 =  0.3333333;
      const float G3 =  0.1666667;

      float snoise(vec3 p) {
        vec3 s = floor(p + dot(p, vec3(F3)));
        vec3 x = p - s + dot(s, vec3(G3));
        vec3 e = step(vec3(0.0), x - x.yzx);
        vec3 i1 = e*(1.0 - e.zxy);
        vec3 i2 = 1.0 - e.zxy*(1.0 - e);
        vec3 x1 = x - i1 + G3;
        vec3 x2 = x - i2 + 2.0*G3;
        vec3 x3 = x - 1.0 + 3.0*G3;
        vec4 w, d;
        w.x = dot(x, x);
        w.y = dot(x1, x1);
        w.z = dot(x2, x2);
        w.w = dot(x3, x3);
        w = max(0.6 - w, 0.0);
        d.x = dot(random3(s), x);
        d.y = dot(random3(s + i1), x1);
        d.z = dot(random3(s + i2), x2);
        d.w = dot(random3(s + 1.0), x3);
        w *= w;
        w *= w;
        d *= w;
        return dot(d, vec4(52.0));
      }

      float snoiseFractal(vec3 m) {
        return 0.5333333* snoise(m)
              +0.2666667* snoise(2.0*m)
              +0.1333333* snoise(4.0*m)
              +0.0666667* snoise(8.0*m);
      }
`+i.fragmentShader,i.fragmentShader=i.fragmentShader.replace("#include <transmission_pars_fragment>",`
        #ifdef USE_TRANSMISSION
          // Transmission code is based on glTF-Sampler-Viewer
          // https://github.com/KhronosGroup/glTF-Sample-Viewer
          uniform float _transmission;
          uniform float thickness;
          uniform float attenuationDistance;
          uniform vec3 attenuationColor;
          #ifdef USE_TRANSMISSIONMAP
            uniform sampler2D transmissionMap;
          #endif
          #ifdef USE_THICKNESSMAP
            uniform sampler2D thicknessMap;
          #endif
          uniform vec2 transmissionSamplerSize;
          uniform sampler2D transmissionSamplerMap;
          uniform mat4 modelMatrix;
          uniform mat4 projectionMatrix;
          varying vec3 vWorldPosition;
          vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
            // Direction of refracted light.
            vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
            // Compute rotation-independant scaling of the model matrix.
            vec3 modelScale;
            modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
            modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
            modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
            // The thickness is specified in local space.
            return normalize( refractionVector ) * thickness * modelScale;
          }
          float applyIorToRoughness( const in float roughness, const in float ior ) {
            // Scale roughness with IOR so that an IOR of 1.0 results in no microfacet refraction and
            // an IOR of 1.5 results in the default amount of microfacet refraction.
            return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
          }
          vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
            float framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );            
            #ifdef USE_SAMPLER
              #ifdef texture2DLodEXT
                return texture2DLodEXT(transmissionSamplerMap, fragCoord.xy, framebufferLod);
              #else
                return texture2D(transmissionSamplerMap, fragCoord.xy, framebufferLod);
              #endif
            #else
              return texture2D(buffer, fragCoord.xy);
            #endif
          }
          vec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
            if ( isinf( attenuationDistance ) ) {
              // Attenuation distance is +∞, i.e. the transmitted color is not attenuated at all.
              return radiance;
            } else {
              // Compute light attenuation using Beer's law.
              vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
              vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance ); // Beer's law
              return transmittance * radiance;
            }
          }
          vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
            const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
            const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
            const in vec3 attenuationColor, const in float attenuationDistance ) {
            vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
            vec3 refractedRayExit = position + transmissionRay;
            // Project refracted vector on the framebuffer, while mapping to normalized device coordinates.
            vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
            vec2 refractionCoords = ndcPos.xy / ndcPos.w;
            refractionCoords += 1.0;
            refractionCoords /= 2.0;
            // Sample framebuffer to get pixel the refracted ray hits.
            vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
            vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );
            // Get the specular component.
            vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
            return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );
          }
        #endif
`),i.fragmentShader=i.fragmentShader.replace("#include <transmission_fragment>",`  
        // Improve the refraction to use the world pos
        material.transmission = _transmission;
        material.transmissionAlpha = 1.0;
        material.thickness = thickness;
        material.attenuationDistance = attenuationDistance;
        material.attenuationColor = attenuationColor;
        #ifdef USE_TRANSMISSIONMAP
          material.transmission *= texture2D( transmissionMap, vUv ).r;
        #endif
        #ifdef USE_THICKNESSMAP
          material.thickness *= texture2D( thicknessMap, vUv ).g;
        #endif
        
        vec3 pos = vWorldPosition;
        float runningSeed = 0.0;
        vec3 v = normalize( cameraPosition - pos );
        vec3 n = inverseTransformDirection( normal, viewMatrix );
        vec3 transmission = vec3(0.0);
        float transmissionR, transmissionB, transmissionG;
        float randomCoords = rand(runningSeed++);
        float thickness_smear = thickness * max(pow(roughnessFactor, 0.33), anisotropicBlur);
        vec3 distortionNormal = vec3(0.0);
        vec3 temporalOffset = vec3(time, -time, -time) * temporalDistortion;
        if (distortion > 0.0) {
          distortionNormal = distortion * vec3(snoiseFractal(vec3((pos * distortionScale + temporalOffset))), snoiseFractal(vec3(pos.zxy * distortionScale - temporalOffset)), snoiseFractal(vec3(pos.yxz * distortionScale + temporalOffset)));
        }
        for (float i = 0.0; i < ${t}.0; i ++) {
          vec3 sampleNorm = normalize(n + roughnessFactor * roughnessFactor * 2.0 * normalize(vec3(rand(runningSeed++) - 0.5, rand(runningSeed++) - 0.5, rand(runningSeed++) - 0.5)) * pow(rand(runningSeed++), 0.33) + distortionNormal);
          transmissionR = getIBLVolumeRefraction(
            sampleNorm, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
            pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness  + thickness_smear * (i + randomCoords) / float(${t}),
            material.attenuationColor, material.attenuationDistance
          ).r;
          transmissionG = getIBLVolumeRefraction(
            sampleNorm, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
            pos, modelMatrix, viewMatrix, projectionMatrix, material.ior  * (1.0 + chromaticAberration * (i + randomCoords) / float(${t})) , material.thickness + thickness_smear * (i + randomCoords) / float(${t}),
            material.attenuationColor, material.attenuationDistance
          ).g;
          transmissionB = getIBLVolumeRefraction(
            sampleNorm, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
            pos, modelMatrix, viewMatrix, projectionMatrix, material.ior * (1.0 + 2.0 * chromaticAberration * (i + randomCoords) / float(${t})), material.thickness + thickness_smear * (i + randomCoords) / float(${t}),
            material.attenuationColor, material.attenuationDistance
          ).b;
          transmission.r += transmissionR;
          transmission.g += transmissionG;
          transmission.b += transmissionB;
        }
        transmission /= ${t}.0;
        totalDiffuse = mix( totalDiffuse, transmission.rgb, material.transmission );
`)},Object.keys(this.uniforms).forEach(i=>Object.defineProperty(this,i,{get:()=>this.uniforms[i].value,set:s=>this.uniforms[i].value=s}))}}const ia=b.forwardRef(({buffer:e,transmissionSampler:t=!1,backside:r=!1,side:i=Zr,transmission:s=1,thickness:o=0,backsideThickness:l=0,samples:f=10,resolution:u,backsideResolution:d,background:m,anisotropy:E,anisotropicBlur:A,...R},P)=>{ir({MeshTransmissionMaterial:na});const G=b.useRef(null),[W]=b.useState(()=>new ra),X=br(d||u),O=br(u);let x,F,z;return Mt(B=>{G.current.time=B.clock.getElapsedTime(),G.current.buffer===O.texture&&!t&&(z=G.current.__r3f.parent,z&&(F=B.gl.toneMapping,x=B.scene.background,B.gl.toneMapping=ti,m&&(B.scene.background=m),z.material=W,r&&(B.gl.setRenderTarget(X),B.gl.render(B.scene,B.camera),z.material=G.current,z.material.buffer=X.texture,z.material.thickness=l,z.material.side=wt),B.gl.setRenderTarget(O),B.gl.render(B.scene,B.camera),z.material=G.current,z.material.thickness=o,z.material.side=i,z.material.buffer=O.texture,B.scene.background=x,B.gl.setRenderTarget(null),B.gl.toneMapping=F))}),b.useImperativeHandle(P,()=>G.current,[]),b.createElement("meshTransmissionMaterial",or({args:[f,t],ref:G},R,{buffer:e||O.texture,_transmission:s,anisotropicBlur:A??E,transmission:t?s:0,thickness:o,side:i}))}),kt={apartment:"lebombo_1k.hdr",city:"potsdamer_platz_1k.hdr",dawn:"kiara_1_dawn_1k.hdr",forest:"forest_slope_1k.hdr",lobby:"st_fagans_interior_1k.hdr",night:"dikhololo_night_1k.hdr",park:"rooitou_park_1k.hdr",studio:"studio_small_03_1k.hdr",sunset:"venice_sunset_1k.hdr",warehouse:"empty_warehouse_01_1k.hdr"},aa="https://raw.githack.com/pmndrs/drei-assets/456060a26bbeb8fdf79326f224b6d99b8bcce736/hdri/",Ir=e=>Array.isArray(e);function tn({files:e=["/px.png","/nx.png","/py.png","/ny.png","/pz.png","/nz.png"],path:t="",preset:r=void 0,encoding:i=void 0,extensions:s}={}){var o;let l=null,f=!1,u;if(r){if(!(r in kt))throw new Error("Preset must be one of: "+Object.keys(kt).join(", "));e=kt[r],t=aa}if(f=Ir(e),u=Ir(e)?"cube":e.startsWith("data:application/exr")?"exr":e.startsWith("data:application/hdr")?"hdr":(o=e.split(".").pop())==null||(o=o.split("?"))==null||(o=o.shift())==null?void 0:o.toLowerCase(),l=f?ai:u==="hdr"?ea:u==="exr"?ta:null,!l)throw new Error("useEnvironment: Unrecognized file extension: "+e);const d=Wr(l,f?[e]:e,R=>{R.setPath==null||R.setPath(t),s&&s(R)}),m=f?d[0]:d;m.mapping=f?ni:ii;const E=3001,A=3e3;return"colorSpace"in m?m.colorSpace=i??f?"srgb":"srgb-linear":m.encoding=i??f?E:A,m}const sa=e=>e.current&&e.current.isScene,oa=e=>sa(e)?e.current:e;function lr(e,t,r,i,s=0){const o=oa(t||r),l=o.background,f=o.environment,u=o.backgroundBlurriness||0;return e!=="only"&&(o.environment=i),e&&(o.background=i),e&&o.backgroundBlurriness!==void 0&&(o.backgroundBlurriness=s),()=>{e!=="only"&&(o.environment=f),e&&(o.background=l),e&&o.backgroundBlurriness!==void 0&&(o.backgroundBlurriness=u)}}function cr({scene:e,background:t=!1,blur:r,map:i}){const s=Ze(o=>o.scene);return b.useLayoutEffect(()=>{if(i)return lr(t,e,s,i,r)},[s,e,i,t,r]),null}function rn({background:e=!1,scene:t,blur:r,...i}){const s=tn(i),o=Ze(l=>l.scene);return b.useLayoutEffect(()=>lr(e,t,o,s,r),[s,e,t,o,r]),null}function la({children:e,near:t=1,far:r=1e3,resolution:i=256,frames:s=1,map:o,background:l=!1,blur:f,scene:u,files:d,path:m,preset:E=void 0,extensions:A}){const R=Ze(x=>x.gl),P=Ze(x=>x.scene),G=b.useRef(null),[W]=b.useState(()=>new Qt),X=b.useMemo(()=>{const x=new si(i);return x.texture.type=Pe,x},[i]);b.useLayoutEffect(()=>(s===1&&G.current.update(R,W),lr(l,u,P,X.texture,f)),[e,W,X.texture,u,P,l,s,R]);let O=1;return Mt(()=>{(s===1/0||O<s)&&(G.current.update(R,W),O++)}),b.createElement(b.Fragment,null,oi(b.createElement(b.Fragment,null,e,b.createElement("cubeCamera",{ref:G,args:[t,r,X]}),d||E?b.createElement(rn,{background:!0,files:d,preset:E,path:m,extensions:A}):o?b.createElement(cr,{background:!0,map:o,extensions:A}):null),W))}function ca(e){var t,r,i,s;const o=tn(e),l=e.map||o;b.useMemo(()=>ir({GroundProjectedEnvImpl:Ji}),[]);const f=b.useMemo(()=>[l],[l]),u=(t=e.ground)==null?void 0:t.height,d=(r=e.ground)==null?void 0:r.radius,m=(i=(s=e.ground)==null?void 0:s.scale)!==null&&i!==void 0?i:1e3;return b.createElement(b.Fragment,null,b.createElement(cr,or({},e,{map:l})),b.createElement("groundProjectedEnvImpl",{args:f,scale:m,height:u,radius:d}))}function ua(e){return e.ground?b.createElement(ca,e):e.map?b.createElement(cr,e):e.children?b.createElement(la,e):b.createElement(rn,e)}const _t=b.forwardRef(({args:e,map:t,toneMapped:r=!1,color:i="white",form:s="rect",intensity:o=1,scale:l=1,target:f,children:u,...d},m)=>{const E=b.useRef(null);return b.useLayoutEffect(()=>{!u&&!d.material&&(li(E.current.material,{color:i}),E.current.material.color.multiplyScalar(o))},[i,o,u,d.material]),b.useLayoutEffect(()=>{f&&E.current.lookAt(Array.isArray(f)?new He(...f):f)},[f]),l=Array.isArray(l)&&l.length===2?[l[0],l[1],1]:l,b.createElement("mesh",or({ref:Fi([E,m]),scale:l},d),s==="circle"?b.createElement("ringGeometry",{args:[0,1,64]}):s==="ring"?b.createElement("ringGeometry",{args:[.5,1,64]}):s==="rect"?b.createElement("planeGeometry",null):b.createElement(s,{args:e}),u||(d.material?null:b.createElement("meshBasicMaterial",{toneMapped:r,map:t,side:ot})))});function ha(e,{whileHover:t,onHoverStart:r,onHoverEnd:i,onPointerOver:s,onPointerOut:o},l){return e||!l||!(t||r||i)?{}:{onPointerOver:u=>{var d;(d=l.animationState)===null||d===void 0||d.setActive("whileHover",!0),s&&s(u)},onPointerOut:u=>{var d;(d=l.animationState)===null||d===void 0||d.setActive("whileHover",!1),o&&o(u)}}}function fa(e,{whileTap:t,onTapStart:r,onTap:i,onTapCancel:s,onPointerDown:o},l){const f=i||r||s||t,u=b.useRef(!1),d=b.useRef(null);if(e||!l||!f)return{};function m(){var P;(P=d.current)===null||P===void 0||P.call(d),d.current=null}function E(){var P;return m(),u.current=!1,(P=l.animationState)===null||P===void 0||P.setActive("whileTap",!1),!hi()}function A(P,G){E()&&(i==null||i(P,G))}function R(P,G){E()&&(s==null||s(P,G))}return{onPointerDown:ci((P,G)=>{var W;if(m(),u.current)return;u.current=!0;const X={passive:!(r||i||s||o)};d.current=ui(yr(window,"pointerup",A,X),yr(window,"pointercancel",R,X)),(W=l.animationState)===null||W===void 0||W.setActive("whileTap",!0),o==null||o(P),r==null||r(P,G)})}}const da=(e,t,r,i,s,o)=>{const l=va(t);return b.createElement(e,Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({ref:r},fi(t,!1,!1)),l),{onUpdate:t.onInstanceUpdate}),ha(s,t,o)),fa(s,t,o)))};function va(e){return b.useMemo(()=>{const t={};for(const r in e){const i=e[r];ct(i)?t[r]=i.get():Array.isArray(i)&&i.includes(ct)&&(t[r]=i.map(di))}return t},[])}const nn=(e,t)=>r=>(i,s)=>{i[e]===void 0&&(i[e]=new He(t)),i[e].setComponent(r,s)},pa=(e,t)=>r=>(i,s)=>{i[e]===void 0&&(i[e]=new vi(t));const o=i[e];o[r]=s},Ur=e=>(t,r)=>{t[e]===void 0&&(t[e]=new ft(r)),t[e].set(r)},Gt=nn("scale",1),Vt=nn("position",0),jt=pa("rotation",0),Cr={x:Vt(0),y:Vt(1),z:Vt(2),scale:(e,t)=>{e.scale===void 0&&(e.scale=new He(1)),e.scale.set(t,t,t)},scaleX:Gt(0),scaleY:Gt(1),scaleZ:Gt(2),rotateX:jt("x"),rotateY:jt("y"),rotateZ:jt("z"),color:Ur("color"),specular:Ur("specular")};function ma(e,t,r){Cr[t]?Cr[t](e,r[t]):(t==="opacity"&&!e.transparent&&(e.transparent=!0),e[t]=r[t])}const ur=(e,t)=>r=>i=>{const s=i[e];return s?s[r]:t},Zt=ur("position",0),Bt=ur("scale",1),Wt=ur("rotation",0),Br={x:Zt("x"),y:Zt("y"),z:Zt("z"),scale:Bt("x"),scaleX:Bt("x"),scaleY:Bt("y"),scaleZ:Bt("z"),rotateX:Wt("x"),rotateY:Wt("y"),rotateZ:Wt("z")};function ga(e){if(e!==void 0)return e instanceof ft?e.getStyle():e}function Sa(e,t){return Br[t]?Br[t](e):ga(e[t])||0}const xa=["x","y","z"],Dr={"position-x":"x","position-y":"y","position-z":"z","rotation-x":"rotateX","rotation-y":"rotateY","rotation-z":"rotateZ","scale-x":"scaleX","scale-y":"scaleY","scale-z":"scaleZ"},an=(e,t)=>{const r={};for(const i in e){const s=e[i];if(ct(s)||ct(t[i]))r[Dr[i]||i]=s;else if(Array.isArray(s))for(let o=0;o<s.length;o++){const l=s[o];if(ct(l)||Array.isArray(t[i])&&ct(t[i][o])){const f=Dr[i+"-"+xa[o]];r[f]=l}}}return r},Ea=()=>({});class Ta extends pi{constructor(){super(...arguments),this.type="three"}readValueFromInstance(t,r){return Sa(t,r)}getBaseTargetFromProps(){}sortInstanceNodePosition(t,r){return t.id-r.id}removeValueFromRenderState(){}measureInstanceViewportBox(){return mi()}scrapeMotionValuesFromProps(t,r){return an(t,r)}build(t,r){for(const i in r)t[i]=r[i]}renderInstance(t,r){for(const i in r)ma(t,i,r)}}const _a=(e,t)=>new Ta(t,{}),wa=xi({scrapeMotionValuesFromProps:an,createRenderState:Ea}),ya=Object.assign({},gi);function Lr(e){return Si({Component:e,preloadedFeatures:ya,useRender:da,useVisualState:wa,createVisualElement:_a})}const Xt=new Map,rr=new Proxy(Lr,{get:(e,t)=>(!Xt.has(t)&&Xt.set(t,Lr(t)),Xt.get(t))}),Ma=[{default_url:"/sohyunjun-portfolio-vite-2024/images/home/project_default_01.jpg",hover_url:"/sohyunjun-portfolio-vite-2024/images/home/project_hover_01.jpg",name:"Lorem ipsum",id:1},{default_url:"/sohyunjun-portfolio-vite-2024/images/home/project_default_02.jpg",hover_url:"/sohyunjun-portfolio-vite-2024/images/home/project_hover_02.jpg",name:"Lorem ipsum",id:2},{default_url:"/sohyunjun-portfolio-vite-2024/images/home/project_default_03.jpg",hover_url:"/sohyunjun-portfolio-vite-2024/images/home/project_hover_03.jpg",name:"Lorem ipsum",id:3},{default_url:"/sohyunjun-portfolio-vite-2024/images/home/project_default_04.jpg",hover_url:"/sohyunjun-portfolio-vite-2024/images/home/project_hover_04.jpg",name:"Lorem ipsum",id:4}],Ra=()=>{const e=Ze(),{width:t,height:r}=e.viewport.getCurrentViewport(e.camera,[0,0,12]);return C.jsx(C.Fragment,{children:Ma.map((i,s)=>C.jsx(Xn,{index:s,position:[s%2===0?-t/2.5:t/2.5,-1.2*s,8],default_url:i.default_url,hover_url:i.hover_url,name:i.name},i.id))})};/**
 * postprocessing v6.34.3 build Sat Feb 10 2024
 * https://github.com/pmndrs/postprocessing
 * Copyright 2015-2024 Raoul van Rüschen
 * @license Zlib
 */var ba=`#include <packing>
#define packFloatToRGBA(v) packDepthToRGBA(v)
#define unpackRGBAToFloat(v) unpackRGBAToDepth(v)
uniform lowp sampler2D luminanceBuffer0;uniform lowp sampler2D luminanceBuffer1;uniform float minLuminance;uniform float deltaTime;uniform float tau;varying vec2 vUv;void main(){float l0=unpackRGBAToFloat(texture2D(luminanceBuffer0,vUv));
#if __VERSION__ < 300
float l1=texture2DLodEXT(luminanceBuffer1,vUv,MIP_LEVEL_1X1).r;
#else
float l1=textureLod(luminanceBuffer1,vUv,MIP_LEVEL_1X1).r;
#endif
l0=max(minLuminance,l0);l1=max(minLuminance,l1);float adaptedLum=l0+(l1-l0)*(1.0-exp(-deltaTime*tau));gl_FragColor=(adaptedLum==1.0)?vec4(1.0):packFloatToRGBA(adaptedLum);}`,hr="varying vec2 vUv;void main(){vUv=position.xy*0.5+0.5;gl_Position=vec4(position.xy,1.0,1.0);}",Aa=class extends ke{constructor(){super({name:"AdaptiveLuminanceMaterial",defines:{MIP_LEVEL_1X1:"0.0"},uniforms:{luminanceBuffer0:new N(null),luminanceBuffer1:new N(null),minLuminance:new N(.01),deltaTime:new N(0),tau:new N(1)},extensions:{shaderTextureLOD:!0},blending:et,toneMapped:!1,depthWrite:!1,depthTest:!1,fragmentShader:ba,vertexShader:hr})}set luminanceBuffer0(e){this.uniforms.luminanceBuffer0.value=e}setLuminanceBuffer0(e){this.uniforms.luminanceBuffer0.value=e}set luminanceBuffer1(e){this.uniforms.luminanceBuffer1.value=e}setLuminanceBuffer1(e){this.uniforms.luminanceBuffer1.value=e}set mipLevel1x1(e){this.defines.MIP_LEVEL_1X1=e.toFixed(1),this.needsUpdate=!0}setMipLevel1x1(e){this.mipLevel1x1=e}set deltaTime(e){this.uniforms.deltaTime.value=e}setDeltaTime(e){this.uniforms.deltaTime.value=e}get minLuminance(){return this.uniforms.minLuminance.value}set minLuminance(e){this.uniforms.minLuminance.value=e}getMinLuminance(){return this.uniforms.minLuminance.value}setMinLuminance(e){this.uniforms.minLuminance.value=e}get adaptationRate(){return this.uniforms.tau.value}set adaptationRate(e){this.uniforms.tau.value=e}getAdaptationRate(){return this.uniforms.tau.value}setAdaptationRate(e){this.uniforms.tau.value=e}},V={SKIP:9,SET:30,ADD:0,ALPHA:1,AVERAGE:2,COLOR:3,COLOR_BURN:4,COLOR_DODGE:5,DARKEN:6,DIFFERENCE:7,DIVIDE:8,DST:9,EXCLUSION:10,HARD_LIGHT:11,HARD_MIX:12,HUE:13,INVERT:14,INVERT_RGB:15,LIGHTEN:16,LINEAR_BURN:17,LINEAR_DODGE:18,LINEAR_LIGHT:19,LUMINOSITY:20,MULTIPLY:21,NEGATION:22,NORMAL:23,OVERLAY:24,PIN_LIGHT:25,REFLECT:26,SATURATION:27,SCREEN:28,SOFT_LIGHT:29,SRC:30,SUBTRACT:31,VIVID_LIGHT:32},sn="",le="srgb",ut="srgb-linear",Oe={NONE:0,DEPTH:1,CONVOLUTION:2},K={FRAGMENT_HEAD:"FRAGMENT_HEAD",FRAGMENT_MAIN_UV:"FRAGMENT_MAIN_UV",FRAGMENT_MAIN_IMAGE:"FRAGMENT_MAIN_IMAGE",VERTEX_HEAD:"VERTEX_HEAD",VERTEX_MAIN_SUPPORT:"VERTEX_MAIN_SUPPORT"},fr={VERY_SMALL:0,SMALL:1,MEDIUM:2,LARGE:3,VERY_LARGE:4,HUGE:5},Ia={SCALE_UP:"lut.scaleup"},Ae={REINHARD:0,REINHARD2:1,REINHARD2_ADAPTIVE:2,UNCHARTED2:3,OPTIMIZED_CINEON:4,ACES_FILMIC:5,AGX:6},dr=Number(Pt.replace(/\D+/g,"")),vr=dr>=152,on=new Map([[Xr,ut],[sr,le]]),Ua=new Map([[ut,Xr],[le,sr]]);function ht(e){return e===null?null:vr?e.outputColorSpace:on.get(e.outputEncoding)}function Fe(e,t){e!==null&&(vr?e.colorSpace=t:e.encoding=Ua.get(t))}function $t(e,t){e===null||t===null||(vr?t.colorSpace=e.colorSpace:t.encoding=e.encoding)}function bt(e){return dr<154?e.replace("colorspace_fragment","encodings_fragment"):e}function Ca(e){return dr<160&&e===Ae.AGX&&(console.warn("AgX requires three r160 or higher, falling back to ACES filmic"),e=Ae.ACES_FILMIC),e}var Ba=`#ifdef FRAMEBUFFER_PRECISION_HIGH
uniform mediump sampler2D inputBuffer;
#else
uniform lowp sampler2D inputBuffer;
#endif
varying vec2 vUv0;varying vec2 vUv1;varying vec2 vUv2;varying vec2 vUv3;void main(){vec4 sum=texture2D(inputBuffer,vUv0);sum+=texture2D(inputBuffer,vUv1);sum+=texture2D(inputBuffer,vUv2);sum+=texture2D(inputBuffer,vUv3);gl_FragColor=sum*0.25;
#include <colorspace_fragment>
}`,Da="uniform vec4 texelSize;uniform float kernel;uniform float scale;varying vec2 vUv0;varying vec2 vUv1;varying vec2 vUv2;varying vec2 vUv3;void main(){vec2 uv=position.xy*0.5+0.5;vec2 dUv=(texelSize.xy*vec2(kernel)+texelSize.zw)*scale;vUv0=vec2(uv.x-dUv.x,uv.y+dUv.y);vUv1=vec2(uv.x+dUv.x,uv.y+dUv.y);vUv2=vec2(uv.x+dUv.x,uv.y-dUv.y);vUv3=vec2(uv.x-dUv.x,uv.y-dUv.y);gl_Position=vec4(position.xy,1.0,1.0);}",La=[new Float32Array([0,0]),new Float32Array([0,1,1]),new Float32Array([0,1,1,2]),new Float32Array([0,1,2,2,3]),new Float32Array([0,1,2,3,4,4,5]),new Float32Array([0,1,2,3,4,5,7,8,9,10])],Na=class extends ke{constructor(e=new Mr){super({name:"KawaseBlurMaterial",uniforms:{inputBuffer:new N(null),texelSize:new N(new Mr),scale:new N(1),kernel:new N(0)},blending:et,toneMapped:!1,depthWrite:!1,depthTest:!1,fragmentShader:Ba,vertexShader:Da}),this.fragmentShader=bt(this.fragmentShader),this.setTexelSize(e.x,e.y),this.kernelSize=fr.MEDIUM}set inputBuffer(e){this.uniforms.inputBuffer.value=e}setInputBuffer(e){this.inputBuffer=e}get kernelSequence(){return La[this.kernelSize]}get scale(){return this.uniforms.scale.value}set scale(e){this.uniforms.scale.value=e}getScale(){return this.uniforms.scale.value}setScale(e){this.uniforms.scale.value=e}getKernel(){return null}get kernel(){return this.uniforms.kernel.value}set kernel(e){this.uniforms.kernel.value=e}setKernel(e){this.kernel=e}setTexelSize(e,t){this.uniforms.texelSize.value.set(e,t,e*.5,t*.5)}setSize(e,t){const r=1/e,i=1/t;this.uniforms.texelSize.value.set(r,i,r*.5,i*.5)}},Pa=`#include <common>
#include <dithering_pars_fragment>
#ifdef FRAMEBUFFER_PRECISION_HIGH
uniform mediump sampler2D inputBuffer;
#else
uniform lowp sampler2D inputBuffer;
#endif
uniform float opacity;varying vec2 vUv;void main(){vec4 texel=texture2D(inputBuffer,vUv);gl_FragColor=opacity*texel;
#include <colorspace_fragment>
#include <dithering_fragment>
}`,ln=class extends ke{constructor(){super({name:"CopyMaterial",uniforms:{inputBuffer:new N(null),opacity:new N(1)},blending:et,toneMapped:!1,depthWrite:!1,depthTest:!1,fragmentShader:Pa,vertexShader:hr}),this.fragmentShader=bt(this.fragmentShader)}set inputBuffer(e){this.uniforms.inputBuffer.value=e}setInputBuffer(e){this.uniforms.inputBuffer.value=e}getOpacity(e){return this.uniforms.opacity.value}setOpacity(e){this.uniforms.opacity.value=e}},Fa=`#include <packing>
#ifdef GL_FRAGMENT_PRECISION_HIGH
uniform highp sampler2D depthBuffer;
#else
uniform mediump sampler2D depthBuffer;
#endif
#ifdef DOWNSAMPLE_NORMALS
uniform lowp sampler2D normalBuffer;
#endif
varying vec2 vUv0;varying vec2 vUv1;varying vec2 vUv2;varying vec2 vUv3;float readDepth(const in vec2 uv){
#if DEPTH_PACKING == 3201
return unpackRGBAToDepth(texture2D(depthBuffer,uv));
#else
return texture2D(depthBuffer,uv).r;
#endif
}int findBestDepth(const in float samples[4]){float c=(samples[0]+samples[1]+samples[2]+samples[3])*0.25;float distances[4];distances[0]=abs(c-samples[0]);distances[1]=abs(c-samples[1]);distances[2]=abs(c-samples[2]);distances[3]=abs(c-samples[3]);float maxDistance=max(max(distances[0],distances[1]),max(distances[2],distances[3]));int remaining[3];int rejected[3];int i,j,k;for(i=0,j=0,k=0;i<4;++i){if(distances[i]<maxDistance){remaining[j++]=i;}else{rejected[k++]=i;}}for(;j<3;++j){remaining[j]=rejected[--k];}vec3 s=vec3(samples[remaining[0]],samples[remaining[1]],samples[remaining[2]]);c=(s.x+s.y+s.z)/3.0;distances[0]=abs(c-s.x);distances[1]=abs(c-s.y);distances[2]=abs(c-s.z);float minDistance=min(distances[0],min(distances[1],distances[2]));for(i=0;i<3;++i){if(distances[i]==minDistance){break;}}return remaining[i];}void main(){float d[4];d[0]=readDepth(vUv0);d[1]=readDepth(vUv1);d[2]=readDepth(vUv2);d[3]=readDepth(vUv3);int index=findBestDepth(d);
#ifdef DOWNSAMPLE_NORMALS
vec3 n[4];n[0]=texture2D(normalBuffer,vUv0).rgb;n[1]=texture2D(normalBuffer,vUv1).rgb;n[2]=texture2D(normalBuffer,vUv2).rgb;n[3]=texture2D(normalBuffer,vUv3).rgb;
#else
vec3 n[4];n[0]=vec3(0.0);n[1]=vec3(0.0);n[2]=vec3(0.0);n[3]=vec3(0.0);
#endif
gl_FragColor=vec4(n[index],d[index]);}`,za="uniform vec2 texelSize;varying vec2 vUv0;varying vec2 vUv1;varying vec2 vUv2;varying vec2 vUv3;void main(){vec2 uv=position.xy*0.5+0.5;vUv0=uv;vUv1=vec2(uv.x,uv.y+texelSize.y);vUv2=vec2(uv.x+texelSize.x,uv.y);vUv3=uv+texelSize;gl_Position=vec4(position.xy,1.0,1.0);}",Oa=class extends ke{constructor(){super({name:"DepthDownsamplingMaterial",defines:{DEPTH_PACKING:"0"},uniforms:{depthBuffer:new N(null),normalBuffer:new N(null),texelSize:new N(new Ee)},blending:et,toneMapped:!1,depthWrite:!1,depthTest:!1,fragmentShader:Fa,vertexShader:za})}set depthBuffer(e){this.uniforms.depthBuffer.value=e}set depthPacking(e){this.defines.DEPTH_PACKING=e.toFixed(0),this.needsUpdate=!0}setDepthBuffer(e,t=dt){this.depthBuffer=e,this.depthPacking=t}set normalBuffer(e){this.uniforms.normalBuffer.value=e,e!==null?this.defines.DOWNSAMPLE_NORMALS="1":delete this.defines.DOWNSAMPLE_NORMALS,this.needsUpdate=!0}setNormalBuffer(e){this.normalBuffer=e}setTexelSize(e,t){this.uniforms.texelSize.value.set(e,t)}setSize(e,t){this.uniforms.texelSize.value.set(1/e,1/t)}},Ha=`#ifdef FRAMEBUFFER_PRECISION_HIGH
uniform mediump sampler2D inputBuffer;
#else
uniform lowp sampler2D inputBuffer;
#endif
#define WEIGHT_INNER 0.125
#define WEIGHT_OUTER 0.0555555
varying vec2 vUv;varying vec2 vUv00;varying vec2 vUv01;varying vec2 vUv02;varying vec2 vUv03;varying vec2 vUv04;varying vec2 vUv05;varying vec2 vUv06;varying vec2 vUv07;varying vec2 vUv08;varying vec2 vUv09;varying vec2 vUv10;varying vec2 vUv11;float clampToBorder(const in vec2 uv){return float(uv.s>=0.0&&uv.s<=1.0&&uv.t>=0.0&&uv.t<=1.0);}void main(){vec4 c=vec4(0.0);vec4 w=WEIGHT_INNER*vec4(clampToBorder(vUv00),clampToBorder(vUv01),clampToBorder(vUv02),clampToBorder(vUv03));c+=w.x*texture2D(inputBuffer,vUv00);c+=w.y*texture2D(inputBuffer,vUv01);c+=w.z*texture2D(inputBuffer,vUv02);c+=w.w*texture2D(inputBuffer,vUv03);w=WEIGHT_OUTER*vec4(clampToBorder(vUv04),clampToBorder(vUv05),clampToBorder(vUv06),clampToBorder(vUv07));c+=w.x*texture2D(inputBuffer,vUv04);c+=w.y*texture2D(inputBuffer,vUv05);c+=w.z*texture2D(inputBuffer,vUv06);c+=w.w*texture2D(inputBuffer,vUv07);w=WEIGHT_OUTER*vec4(clampToBorder(vUv08),clampToBorder(vUv09),clampToBorder(vUv10),clampToBorder(vUv11));c+=w.x*texture2D(inputBuffer,vUv08);c+=w.y*texture2D(inputBuffer,vUv09);c+=w.z*texture2D(inputBuffer,vUv10);c+=w.w*texture2D(inputBuffer,vUv11);c+=WEIGHT_OUTER*texture2D(inputBuffer,vUv);gl_FragColor=c;
#include <colorspace_fragment>
}`,ka="uniform vec2 texelSize;varying vec2 vUv;varying vec2 vUv00;varying vec2 vUv01;varying vec2 vUv02;varying vec2 vUv03;varying vec2 vUv04;varying vec2 vUv05;varying vec2 vUv06;varying vec2 vUv07;varying vec2 vUv08;varying vec2 vUv09;varying vec2 vUv10;varying vec2 vUv11;void main(){vUv=position.xy*0.5+0.5;vUv00=vUv+texelSize*vec2(-1.0,1.0);vUv01=vUv+texelSize*vec2(1.0,1.0);vUv02=vUv+texelSize*vec2(-1.0,-1.0);vUv03=vUv+texelSize*vec2(1.0,-1.0);vUv04=vUv+texelSize*vec2(-2.0,2.0);vUv05=vUv+texelSize*vec2(0.0,2.0);vUv06=vUv+texelSize*vec2(2.0,2.0);vUv07=vUv+texelSize*vec2(-2.0,0.0);vUv08=vUv+texelSize*vec2(2.0,0.0);vUv09=vUv+texelSize*vec2(-2.0,-2.0);vUv10=vUv+texelSize*vec2(0.0,-2.0);vUv11=vUv+texelSize*vec2(2.0,-2.0);gl_Position=vec4(position.xy,1.0,1.0);}",Ga=class extends ke{constructor(){super({name:"DownsamplingMaterial",uniforms:{inputBuffer:new N(null),texelSize:new N(new Ee)},blending:et,toneMapped:!1,depthWrite:!1,depthTest:!1,fragmentShader:Ha,vertexShader:ka}),this.fragmentShader=bt(this.fragmentShader)}set inputBuffer(e){this.uniforms.inputBuffer.value=e}setSize(e,t){this.uniforms.texelSize.value.set(1/e,1/t)}},Va=`#include <common>
#include <packing>
#include <dithering_pars_fragment>
#define packFloatToRGBA(v) packDepthToRGBA(v)
#define unpackRGBAToFloat(v) unpackRGBAToDepth(v)
#ifdef FRAMEBUFFER_PRECISION_HIGH
uniform mediump sampler2D inputBuffer;
#else
uniform lowp sampler2D inputBuffer;
#endif
#if DEPTH_PACKING == 3201
uniform lowp sampler2D depthBuffer;
#elif defined(GL_FRAGMENT_PRECISION_HIGH)
uniform highp sampler2D depthBuffer;
#else
uniform mediump sampler2D depthBuffer;
#endif
uniform vec2 resolution;uniform vec2 texelSize;uniform float cameraNear;uniform float cameraFar;uniform float aspect;uniform float time;varying vec2 vUv;
#if THREE_REVISION < 143
#define luminance(v) linearToRelativeLuminance(v)
#endif
#if THREE_REVISION >= 137
vec4 sRGBToLinear(const in vec4 value){return vec4(mix(pow(value.rgb*0.9478672986+vec3(0.0521327014),vec3(2.4)),value.rgb*0.0773993808,vec3(lessThanEqual(value.rgb,vec3(0.04045)))),value.a);}
#endif
float readDepth(const in vec2 uv){
#if DEPTH_PACKING == 3201
return unpackRGBAToDepth(texture2D(depthBuffer,uv));
#else
return texture2D(depthBuffer,uv).r;
#endif
}float getViewZ(const in float depth){
#ifdef PERSPECTIVE_CAMERA
return perspectiveDepthToViewZ(depth,cameraNear,cameraFar);
#else
return orthographicDepthToViewZ(depth,cameraNear,cameraFar);
#endif
}vec3 RGBToHCV(const in vec3 RGB){vec4 P=mix(vec4(RGB.bg,-1.0,2.0/3.0),vec4(RGB.gb,0.0,-1.0/3.0),step(RGB.b,RGB.g));vec4 Q=mix(vec4(P.xyw,RGB.r),vec4(RGB.r,P.yzx),step(P.x,RGB.r));float C=Q.x-min(Q.w,Q.y);float H=abs((Q.w-Q.y)/(6.0*C+EPSILON)+Q.z);return vec3(H,C,Q.x);}vec3 RGBToHSL(const in vec3 RGB){vec3 HCV=RGBToHCV(RGB);float L=HCV.z-HCV.y*0.5;float S=HCV.y/(1.0-abs(L*2.0-1.0)+EPSILON);return vec3(HCV.x,S,L);}vec3 HueToRGB(const in float H){float R=abs(H*6.0-3.0)-1.0;float G=2.0-abs(H*6.0-2.0);float B=2.0-abs(H*6.0-4.0);return clamp(vec3(R,G,B),0.0,1.0);}vec3 HSLToRGB(const in vec3 HSL){vec3 RGB=HueToRGB(HSL.x);float C=(1.0-abs(2.0*HSL.z-1.0))*HSL.y;return(RGB-0.5)*C+HSL.z;}FRAGMENT_HEAD void main(){FRAGMENT_MAIN_UV vec4 color0=texture2D(inputBuffer,UV);vec4 color1=vec4(0.0);FRAGMENT_MAIN_IMAGE color0.a=clamp(color0.a,0.0,1.0);gl_FragColor=color0;
#ifdef ENCODE_OUTPUT
#include <colorspace_fragment>
#endif
#include <dithering_fragment>
}`,ja="uniform vec2 resolution;uniform vec2 texelSize;uniform float cameraNear;uniform float cameraFar;uniform float aspect;uniform float time;varying vec2 vUv;VERTEX_HEAD void main(){vUv=position.xy*0.5+0.5;VERTEX_MAIN_SUPPORT gl_Position=vec4(position.xy,1.0,1.0);}",Za=class extends ke{constructor(e,t,r,i,s=!1){super({name:"EffectMaterial",defines:{THREE_REVISION:Pt.replace(/\D+/g,""),DEPTH_PACKING:"0",ENCODE_OUTPUT:"1"},uniforms:{inputBuffer:new N(null),depthBuffer:new N(null),resolution:new N(new Ee),texelSize:new N(new Ee),cameraNear:new N(.3),cameraFar:new N(1e3),aspect:new N(1),time:new N(0)},blending:et,toneMapped:!1,depthWrite:!1,depthTest:!1,dithering:s}),e&&this.setShaderParts(e),t&&this.setDefines(t),r&&this.setUniforms(r),this.copyCameraSettings(i)}set inputBuffer(e){this.uniforms.inputBuffer.value=e}setInputBuffer(e){this.uniforms.inputBuffer.value=e}get depthBuffer(){return this.uniforms.depthBuffer.value}set depthBuffer(e){this.uniforms.depthBuffer.value=e}get depthPacking(){return Number(this.defines.DEPTH_PACKING)}set depthPacking(e){this.defines.DEPTH_PACKING=e.toFixed(0),this.needsUpdate=!0}setDepthBuffer(e,t=dt){this.depthBuffer=e,this.depthPacking=t}setShaderData(e){this.setShaderParts(e.shaderParts),this.setDefines(e.defines),this.setUniforms(e.uniforms),this.setExtensions(e.extensions)}setShaderParts(e){return this.fragmentShader=Va.replace(K.FRAGMENT_HEAD,e.get(K.FRAGMENT_HEAD)||"").replace(K.FRAGMENT_MAIN_UV,e.get(K.FRAGMENT_MAIN_UV)||"").replace(K.FRAGMENT_MAIN_IMAGE,e.get(K.FRAGMENT_MAIN_IMAGE)||""),this.vertexShader=ja.replace(K.VERTEX_HEAD,e.get(K.VERTEX_HEAD)||"").replace(K.VERTEX_MAIN_SUPPORT,e.get(K.VERTEX_MAIN_SUPPORT)||""),this.fragmentShader=bt(this.fragmentShader),this.needsUpdate=!0,this}setDefines(e){for(const t of e.entries())this.defines[t[0]]=t[1];return this.needsUpdate=!0,this}setUniforms(e){for(const t of e.entries())this.uniforms[t[0]]=t[1];return this}setExtensions(e){this.extensions={};for(const t of e)this.extensions[t]=!0;return this}get encodeOutput(){return this.defines.ENCODE_OUTPUT!==void 0}set encodeOutput(e){this.encodeOutput!==e&&(e?this.defines.ENCODE_OUTPUT="1":delete this.defines.ENCODE_OUTPUT,this.needsUpdate=!0)}isOutputEncodingEnabled(e){return this.encodeOutput}setOutputEncodingEnabled(e){this.encodeOutput=e}get time(){return this.uniforms.time.value}set time(e){this.uniforms.time.value=e}setDeltaTime(e){this.uniforms.time.value+=e}adoptCameraSettings(e){this.copyCameraSettings(e)}copyCameraSettings(e){e&&(this.uniforms.cameraNear.value=e.near,this.uniforms.cameraFar.value=e.far,e instanceof Ii?this.defines.PERSPECTIVE_CAMERA="1":delete this.defines.PERSPECTIVE_CAMERA,this.needsUpdate=!0)}setSize(e,t){const r=this.uniforms;r.resolution.value.set(e,t),r.texelSize.value.set(1/e,1/t),r.aspect.value=e/t}static get Section(){return K}},Wa=`#include <common>
#if THREE_REVISION < 143
#define luminance(v) linearToRelativeLuminance(v)
#endif
#ifdef FRAMEBUFFER_PRECISION_HIGH
uniform mediump sampler2D inputBuffer;
#else
uniform lowp sampler2D inputBuffer;
#endif
#ifdef RANGE
uniform vec2 range;
#elif defined(THRESHOLD)
uniform float threshold;uniform float smoothing;
#endif
varying vec2 vUv;void main(){vec4 texel=texture2D(inputBuffer,vUv);float l=luminance(texel.rgb);
#ifdef RANGE
float low=step(range.x,l);float high=step(l,range.y);l*=low*high;
#elif defined(THRESHOLD)
l=smoothstep(threshold,threshold+smoothing,l)*l;
#endif
#ifdef COLOR
gl_FragColor=vec4(texel.rgb*clamp(l,0.0,1.0),l);
#else
gl_FragColor=vec4(l);
#endif
}`,Xa=class extends ke{constructor(e=!1,t=null){super({name:"LuminanceMaterial",defines:{THREE_REVISION:Pt.replace(/\D+/g,"")},uniforms:{inputBuffer:new N(null),threshold:new N(0),smoothing:new N(1),range:new N(null)},blending:et,toneMapped:!1,depthWrite:!1,depthTest:!1,fragmentShader:Wa,vertexShader:hr}),this.colorOutput=e,this.luminanceRange=t}set inputBuffer(e){this.uniforms.inputBuffer.value=e}setInputBuffer(e){this.uniforms.inputBuffer.value=e}get threshold(){return this.uniforms.threshold.value}set threshold(e){this.smoothing>0||e>0?this.defines.THRESHOLD="1":delete this.defines.THRESHOLD,this.uniforms.threshold.value=e}getThreshold(){return this.threshold}setThreshold(e){this.threshold=e}get smoothing(){return this.uniforms.smoothing.value}set smoothing(e){this.threshold>0||e>0?this.defines.THRESHOLD="1":delete this.defines.THRESHOLD,this.uniforms.smoothing.value=e}getSmoothingFactor(){return this.smoothing}setSmoothingFactor(e){this.smoothing=e}get useThreshold(){return this.threshold>0||this.smoothing>0}set useThreshold(e){}get colorOutput(){return this.defines.COLOR!==void 0}set colorOutput(e){e?this.defines.COLOR="1":delete this.defines.COLOR,this.needsUpdate=!0}isColorOutputEnabled(e){return this.colorOutput}setColorOutputEnabled(e){this.colorOutput=e}get useRange(){return this.luminanceRange!==null}set useRange(e){this.luminanceRange=null}get luminanceRange(){return this.uniforms.range.value}set luminanceRange(e){e!==null?this.defines.RANGE="1":delete this.defines.RANGE,this.uniforms.range.value=e,this.needsUpdate=!0}getLuminanceRange(){return this.luminanceRange}setLuminanceRange(e){this.luminanceRange=e}},$a=`#ifdef FRAMEBUFFER_PRECISION_HIGH
uniform mediump sampler2D inputBuffer;uniform mediump sampler2D supportBuffer;
#else
uniform lowp sampler2D inputBuffer;uniform lowp sampler2D supportBuffer;
#endif
uniform float radius;varying vec2 vUv;varying vec2 vUv0;varying vec2 vUv1;varying vec2 vUv2;varying vec2 vUv3;varying vec2 vUv4;varying vec2 vUv5;varying vec2 vUv6;varying vec2 vUv7;void main(){vec4 c=vec4(0.0);c+=texture2D(inputBuffer,vUv0)*0.0625;c+=texture2D(inputBuffer,vUv1)*0.125;c+=texture2D(inputBuffer,vUv2)*0.0625;c+=texture2D(inputBuffer,vUv3)*0.125;c+=texture2D(inputBuffer,vUv)*0.25;c+=texture2D(inputBuffer,vUv4)*0.125;c+=texture2D(inputBuffer,vUv5)*0.0625;c+=texture2D(inputBuffer,vUv6)*0.125;c+=texture2D(inputBuffer,vUv7)*0.0625;vec4 baseColor=texture2D(supportBuffer,vUv);gl_FragColor=mix(baseColor,c,radius);
#include <colorspace_fragment>
}`,Ya="uniform vec2 texelSize;varying vec2 vUv;varying vec2 vUv0;varying vec2 vUv1;varying vec2 vUv2;varying vec2 vUv3;varying vec2 vUv4;varying vec2 vUv5;varying vec2 vUv6;varying vec2 vUv7;void main(){vUv=position.xy*0.5+0.5;vUv0=vUv+texelSize*vec2(-1.0,1.0);vUv1=vUv+texelSize*vec2(0.0,1.0);vUv2=vUv+texelSize*vec2(1.0,1.0);vUv3=vUv+texelSize*vec2(-1.0,0.0);vUv4=vUv+texelSize*vec2(1.0,0.0);vUv5=vUv+texelSize*vec2(-1.0,-1.0);vUv6=vUv+texelSize*vec2(0.0,-1.0);vUv7=vUv+texelSize*vec2(1.0,-1.0);gl_Position=vec4(position.xy,1.0,1.0);}",Ka=class extends ke{constructor(){super({name:"UpsamplingMaterial",uniforms:{inputBuffer:new N(null),supportBuffer:new N(null),texelSize:new N(new Ee),radius:new N(.85)},blending:et,toneMapped:!1,depthWrite:!1,depthTest:!1,fragmentShader:$a,vertexShader:Ya}),this.fragmentShader=bt(this.fragmentShader)}set inputBuffer(e){this.uniforms.inputBuffer.value=e}set supportBuffer(e){this.uniforms.supportBuffer.value=e}get radius(){return this.uniforms.radius.value}set radius(e){this.uniforms.radius.value=e}setSize(e,t){this.uniforms.texelSize.value.set(1/e,1/t)}},qa=new Ci,Ke=null;function Qa(){if(Ke===null){const e=new Float32Array([-1,-1,0,3,-1,0,-1,3,0]),t=new Float32Array([0,0,2,0,0,2]);Ke=new Bi,Ke.setAttribute!==void 0?(Ke.setAttribute("position",new Ut(e,3)),Ke.setAttribute("uv",new Ut(t,2))):(Ke.addAttribute("position",new Ut(e,3)),Ke.addAttribute("uv",new Ut(t,2)))}return Ke}var Re=class cn{constructor(t="Pass",r=new Qt,i=qa){this.name=t,this.renderer=null,this.scene=r,this.camera=i,this.screen=null,this.rtt=!0,this.needsSwap=!0,this.needsDepthTexture=!1,this.enabled=!0}get renderToScreen(){return!this.rtt}set renderToScreen(t){if(this.rtt===t){const r=this.fullscreenMaterial;r!==null&&(r.needsUpdate=!0),this.rtt=!t}}set mainScene(t){}set mainCamera(t){}setRenderer(t){this.renderer=t}isEnabled(){return this.enabled}setEnabled(t){this.enabled=t}get fullscreenMaterial(){return this.screen!==null?this.screen.material:null}set fullscreenMaterial(t){let r=this.screen;r!==null?r.material=t:(r=new Vr(Qa(),t),r.frustumCulled=!1,this.scene===null&&(this.scene=new Qt),this.scene.add(r),this.screen=r)}getFullscreenMaterial(){return this.fullscreenMaterial}setFullscreenMaterial(t){this.fullscreenMaterial=t}getDepthTexture(){return null}setDepthTexture(t,r=dt){}render(t,r,i,s,o){throw new Error("Render method not implemented!")}setSize(t,r){}initialize(t,r,i){}dispose(){for(const t of Object.keys(this)){const r=this[t];(r instanceof Le||r instanceof $r||r instanceof nr||r instanceof cn)&&this[t].dispose()}}},un=class extends Re{constructor(e,t=!0){super("CopyPass"),this.fullscreenMaterial=new ln,this.needsSwap=!1,this.renderTarget=e,e===void 0&&(this.renderTarget=new Le(1,1,{minFilter:Me,magFilter:Me,stencilBuffer:!1,depthBuffer:!1}),this.renderTarget.texture.name="CopyPass.Target"),this.autoResize=t}get resize(){return this.autoResize}set resize(e){this.autoResize=e}get texture(){return this.renderTarget.texture}getTexture(){return this.renderTarget.texture}setAutoResizeEnabled(e){this.autoResize=e}render(e,t,r,i,s){this.fullscreenMaterial.inputBuffer=t.texture,e.setRenderTarget(this.renderToScreen?null:this.renderTarget),e.render(this.scene,this.camera)}setSize(e,t){this.autoResize&&this.renderTarget.setSize(e,t)}initialize(e,t,r){r!==void 0&&(this.renderTarget.texture.type=r,r!==We?this.fullscreenMaterial.defines.FRAMEBUFFER_PRECISION_HIGH="1":ht(e)===le&&Fe(this.renderTarget.texture,le))}},Ja=class extends Re{constructor(e,{minLuminance:t=.01,adaptationRate:r=1}={}){super("AdaptiveLuminancePass"),this.fullscreenMaterial=new Aa,this.needsSwap=!1,this.renderTargetPrevious=new Le(1,1,{minFilter:Je,magFilter:Je,depthBuffer:!1}),this.renderTargetPrevious.texture.name="Luminance.Previous";const i=this.fullscreenMaterial;i.luminanceBuffer0=this.renderTargetPrevious.texture,i.luminanceBuffer1=e,i.minLuminance=t,i.adaptationRate=r,this.renderTargetAdapted=this.renderTargetPrevious.clone(),this.renderTargetAdapted.texture.name="Luminance.Adapted",this.copyPass=new un(this.renderTargetPrevious,!1)}get texture(){return this.renderTargetAdapted.texture}getTexture(){return this.renderTargetAdapted.texture}set mipLevel1x1(e){this.fullscreenMaterial.mipLevel1x1=e}get adaptationRate(){return this.fullscreenMaterial.adaptationRate}set adaptationRate(e){this.fullscreenMaterial.adaptationRate=e}render(e,t,r,i,s){this.fullscreenMaterial.deltaTime=i,e.setRenderTarget(this.renderToScreen?null:this.renderTargetAdapted),e.render(this.scene,this.camera),this.copyPass.render(e,this.renderTargetAdapted)}},es=class extends Re{constructor(){super("ClearMaskPass",null,null),this.needsSwap=!1}render(e,t,r,i,s){const o=e.state.buffers.stencil;o.setLocked(!1),o.setTest(!1)}},Nr=new ft,hn=class extends Re{constructor(e=!0,t=!0,r=!1){super("ClearPass",null,null),this.needsSwap=!1,this.color=e,this.depth=t,this.stencil=r,this.overrideClearColor=null,this.overrideClearAlpha=-1}setClearFlags(e,t,r){this.color=e,this.depth=t,this.stencil=r}getOverrideClearColor(){return this.overrideClearColor}setOverrideClearColor(e){this.overrideClearColor=e}getOverrideClearAlpha(){return this.overrideClearAlpha}setOverrideClearAlpha(e){this.overrideClearAlpha=e}render(e,t,r,i,s){const o=this.overrideClearColor,l=this.overrideClearAlpha,f=e.getClearAlpha(),u=o!==null,d=l>=0;u?(e.getClearColor(Nr),e.setClearColor(o,d?l:f)):d&&e.setClearAlpha(l),e.setRenderTarget(this.renderToScreen?null:t),e.clear(this.color,this.depth,this.stencil),u?e.setClearColor(Nr,f):d&&e.setClearAlpha(f)}},fn=class extends Re{constructor(e,t,r=null){super("RenderPass",e,t),this.needsSwap=!1,this.clearPass=new hn,this.overrideMaterialManager=r===null?null:new Fr(r),this.ignoreBackground=!1,this.skipShadowMapUpdate=!1,this.selection=null}set mainScene(e){this.scene=e}set mainCamera(e){this.camera=e}get renderToScreen(){return super.renderToScreen}set renderToScreen(e){super.renderToScreen=e,this.clearPass.renderToScreen=e}get overrideMaterial(){const e=this.overrideMaterialManager;return e!==null?e.material:null}set overrideMaterial(e){const t=this.overrideMaterialManager;e!==null?t!==null?t.setMaterial(e):this.overrideMaterialManager=new Fr(e):t!==null&&(t.dispose(),this.overrideMaterialManager=null)}getOverrideMaterial(){return this.overrideMaterial}setOverrideMaterial(e){this.overrideMaterial=e}get clear(){return this.clearPass.enabled}set clear(e){this.clearPass.enabled=e}getSelection(){return this.selection}setSelection(e){this.selection=e}isBackgroundDisabled(){return this.ignoreBackground}setBackgroundDisabled(e){this.ignoreBackground=e}isShadowMapDisabled(){return this.skipShadowMapUpdate}setShadowMapDisabled(e){this.skipShadowMapUpdate=e}getClearPass(){return this.clearPass}render(e,t,r,i,s){const o=this.scene,l=this.camera,f=this.selection,u=l.layers.mask,d=o.background,m=e.shadowMap.autoUpdate,E=this.renderToScreen?null:t;f!==null&&l.layers.set(f.getLayer()),this.skipShadowMapUpdate&&(e.shadowMap.autoUpdate=!1),(this.ignoreBackground||this.clearPass.overrideClearColor!==null)&&(o.background=null),this.clearPass.enabled&&this.clearPass.render(e,t),e.setRenderTarget(E),this.overrideMaterialManager!==null?this.overrideMaterialManager.render(e,o,l):e.render(o,l),l.layers.mask=u,o.background=d,e.shadowMap.autoUpdate=m}},ts=class extends Re{constructor({normalBuffer:e=null,resolutionScale:t=.5,width:r=pe.AUTO_SIZE,height:i=pe.AUTO_SIZE,resolutionX:s=r,resolutionY:o=i}={}){super("DepthDownsamplingPass");const l=new Oa;l.normalBuffer=e,this.fullscreenMaterial=l,this.needsDepthTexture=!0,this.needsSwap=!1,this.renderTarget=new Le(1,1,{minFilter:Je,magFilter:Je,depthBuffer:!1,type:xe}),this.renderTarget.texture.name="DepthDownsamplingPass.Target",this.renderTarget.texture.generateMipmaps=!1;const f=this.resolution=new pe(this,s,o,t);f.addEventListener("change",u=>this.setSize(f.baseWidth,f.baseHeight))}get texture(){return this.renderTarget.texture}getTexture(){return this.renderTarget.texture}getResolution(){return this.resolution}setDepthTexture(e,t=dt){this.fullscreenMaterial.depthBuffer=e,this.fullscreenMaterial.depthPacking=t}render(e,t,r,i,s){e.setRenderTarget(this.renderToScreen?null:this.renderTarget),e.render(this.scene,this.camera)}setSize(e,t){const r=this.resolution;r.setBaseSize(e,t),this.renderTarget.setSize(r.width,r.height),this.fullscreenMaterial.setSize(e,t)}initialize(e,t,r){const i=e.getContext();if(!(i.getExtension("EXT_color_buffer_float")||i.getExtension("EXT_color_buffer_half_float")))throw new Error("Rendering to float texture is not supported.")}};function Pr(e,t,r){for(const i of t){const s="$1"+e+i.charAt(0).toUpperCase()+i.slice(1),o=new RegExp("([^\\.])(\\b"+i+"\\b)","g");for(const l of r.entries())l[1]!==null&&r.set(l[0],l[1].replace(o,s))}}function rs(e,t,r){let i=t.getFragmentShader(),s=t.getVertexShader();const o=i!==void 0&&/mainImage/.test(i),l=i!==void 0&&/mainUv/.test(i);if(r.attributes|=t.getAttributes(),i===void 0)throw new Error(`Missing fragment shader (${t.name})`);if(l&&r.attributes&Oe.CONVOLUTION)throw new Error(`Effects that transform UVs are incompatible with convolution effects (${t.name})`);if(!o&&!l)throw new Error(`Could not find mainImage or mainUv function (${t.name})`);{const f=/\w+\s+(\w+)\([\w\s,]*\)\s*{/g,u=r.shaderParts;let d=u.get(K.FRAGMENT_HEAD)||"",m=u.get(K.FRAGMENT_MAIN_UV)||"",E=u.get(K.FRAGMENT_MAIN_IMAGE)||"",A=u.get(K.VERTEX_HEAD)||"",R=u.get(K.VERTEX_MAIN_SUPPORT)||"";const P=new Set,G=new Set;if(l&&(m+=`	${e}MainUv(UV);
`,r.uvTransformation=!0),s!==null&&/mainSupport/.test(s)){const O=/mainSupport *\([\w\s]*?uv\s*?\)/.test(s);R+=`	${e}MainSupport(`,R+=O?`vUv);
`:`);
`;for(const x of s.matchAll(/(?:varying\s+\w+\s+([\S\s]*?);)/g))for(const F of x[1].split(/\s*,\s*/))r.varyings.add(F),P.add(F),G.add(F);for(const x of s.matchAll(f))G.add(x[1])}for(const O of i.matchAll(f))G.add(O[1]);for(const O of t.defines.keys())G.add(O.replace(/\([\w\s,]*\)/g,""));for(const O of t.uniforms.keys())G.add(O);G.delete("while"),G.delete("for"),G.delete("if"),t.uniforms.forEach((O,x)=>r.uniforms.set(e+x.charAt(0).toUpperCase()+x.slice(1),O)),t.defines.forEach((O,x)=>r.defines.set(e+x.charAt(0).toUpperCase()+x.slice(1),O));const W=new Map([["fragment",i],["vertex",s]]);Pr(e,G,r.defines),Pr(e,G,W),i=W.get("fragment"),s=W.get("vertex");const X=t.blendMode;if(r.blendModes.set(X.blendFunction,X),o){t.inputColorSpace!==null&&t.inputColorSpace!==r.colorSpace&&(E+=t.inputColorSpace===le?`color0 = LinearTosRGB(color0);
	`:`color0 = sRGBToLinear(color0);
	`),t.outputColorSpace!==sn?r.colorSpace=t.outputColorSpace:t.inputColorSpace!==null&&(r.colorSpace=t.inputColorSpace);const O=/MainImage *\([\w\s,]*?depth[\w\s,]*?\)/;E+=`${e}MainImage(color0, UV, `,r.attributes&Oe.DEPTH&&O.test(i)&&(E+="depth, ",r.readDepth=!0),E+=`color1);
	`;const x=e+"BlendOpacity";r.uniforms.set(x,X.opacity),E+=`color0 = blend${X.blendFunction}(color0, color1, ${x});

	`,d+=`uniform float ${x};

`}if(d+=i+`
`,s!==null&&(A+=s+`
`),u.set(K.FRAGMENT_HEAD,d),u.set(K.FRAGMENT_MAIN_UV,m),u.set(K.FRAGMENT_MAIN_IMAGE,E),u.set(K.VERTEX_HEAD,A),u.set(K.VERTEX_MAIN_SUPPORT,R),t.extensions!==null)for(const O of t.extensions)r.extensions.add(O)}}var ns=class extends Re{constructor(e,...t){super("EffectPass"),this.fullscreenMaterial=new Za(null,null,null,e),this.listener=r=>this.handleEvent(r),this.effects=[],this.setEffects(t),this.skipRendering=!1,this.minTime=1,this.maxTime=Number.POSITIVE_INFINITY,this.timeScale=1}set mainScene(e){for(const t of this.effects)t.mainScene=e}set mainCamera(e){this.fullscreenMaterial.copyCameraSettings(e);for(const t of this.effects)t.mainCamera=e}get encodeOutput(){return this.fullscreenMaterial.encodeOutput}set encodeOutput(e){this.fullscreenMaterial.encodeOutput=e}get dithering(){return this.fullscreenMaterial.dithering}set dithering(e){const t=this.fullscreenMaterial;t.dithering=e,t.needsUpdate=!0}setEffects(e){for(const t of this.effects)t.removeEventListener("change",this.listener);this.effects=e.sort((t,r)=>r.attributes-t.attributes);for(const t of this.effects)t.addEventListener("change",this.listener)}updateMaterial(){const e=new hs;let t=0;for(const l of this.effects)if(l.blendMode.blendFunction===V.DST)e.attributes|=l.getAttributes()&Oe.DEPTH;else{if(e.attributes&l.getAttributes()&Oe.CONVOLUTION)throw new Error(`Convolution effects cannot be merged (${l.name})`);rs("e"+t++,l,e)}let r=e.shaderParts.get(K.FRAGMENT_HEAD),i=e.shaderParts.get(K.FRAGMENT_MAIN_IMAGE),s=e.shaderParts.get(K.FRAGMENT_MAIN_UV);const o=/\bblend\b/g;for(const l of e.blendModes.values())r+=l.getShaderCode().replace(o,`blend${l.blendFunction}`)+`
`;e.attributes&Oe.DEPTH?(e.readDepth&&(i=`float depth = readDepth(UV);

	`+i),this.needsDepthTexture=this.getDepthTexture()===null):this.needsDepthTexture=!1,e.colorSpace===le&&(i+=`color0 = sRGBToLinear(color0);
	`),e.uvTransformation?(s=`vec2 transformedUv = vUv;
`+s,e.defines.set("UV","transformedUv")):e.defines.set("UV","vUv"),e.shaderParts.set(K.FRAGMENT_HEAD,r),e.shaderParts.set(K.FRAGMENT_MAIN_IMAGE,i),e.shaderParts.set(K.FRAGMENT_MAIN_UV,s);for(const[l,f]of e.shaderParts)f!==null&&e.shaderParts.set(l,f.trim().replace(/^#/,`
#`));this.skipRendering=t===0,this.needsSwap=!this.skipRendering,this.fullscreenMaterial.setShaderData(e)}recompile(){this.updateMaterial()}getDepthTexture(){return this.fullscreenMaterial.depthBuffer}setDepthTexture(e,t=dt){this.fullscreenMaterial.depthBuffer=e,this.fullscreenMaterial.depthPacking=t;for(const r of this.effects)r.setDepthTexture(e,t)}render(e,t,r,i,s){for(const o of this.effects)o.update(e,t,i);if(!this.skipRendering||this.renderToScreen){const o=this.fullscreenMaterial;o.inputBuffer=t.texture,o.time+=i*this.timeScale,e.setRenderTarget(this.renderToScreen?null:r),e.render(this.scene,this.camera)}}setSize(e,t){this.fullscreenMaterial.setSize(e,t);for(const r of this.effects)r.setSize(e,t)}initialize(e,t,r){this.renderer=e;for(const i of this.effects)i.initialize(e,t,r);this.updateMaterial(),r!==void 0&&r!==We&&(this.fullscreenMaterial.defines.FRAMEBUFFER_PRECISION_HIGH="1")}dispose(){super.dispose();for(const e of this.effects)e.removeEventListener("change",this.listener),e.dispose()}handleEvent(e){switch(e.type){case"change":this.recompile();break}}},is=class extends Re{constructor({kernelSize:e=fr.MEDIUM,resolutionScale:t=.5,width:r=pe.AUTO_SIZE,height:i=pe.AUTO_SIZE,resolutionX:s=r,resolutionY:o=i}={}){super("KawaseBlurPass"),this.renderTargetA=new Le(1,1,{depthBuffer:!1}),this.renderTargetA.texture.name="Blur.Target.A",this.renderTargetB=this.renderTargetA.clone(),this.renderTargetB.texture.name="Blur.Target.B";const l=this.resolution=new pe(this,s,o,t);l.addEventListener("change",f=>this.setSize(l.baseWidth,l.baseHeight)),this._blurMaterial=new Na,this._blurMaterial.kernelSize=e,this.copyMaterial=new ln}getResolution(){return this.resolution}get blurMaterial(){return this._blurMaterial}set blurMaterial(e){this._blurMaterial=e}get dithering(){return this.copyMaterial.dithering}set dithering(e){this.copyMaterial.dithering=e}get kernelSize(){return this.blurMaterial.kernelSize}set kernelSize(e){this.blurMaterial.kernelSize=e}get width(){return this.resolution.width}set width(e){this.resolution.preferredWidth=e}get height(){return this.resolution.height}set height(e){this.resolution.preferredHeight=e}get scale(){return this.blurMaterial.scale}set scale(e){this.blurMaterial.scale=e}getScale(){return this.blurMaterial.scale}setScale(e){this.blurMaterial.scale=e}getKernelSize(){return this.kernelSize}setKernelSize(e){this.kernelSize=e}getResolutionScale(){return this.resolution.scale}setResolutionScale(e){this.resolution.scale=e}render(e,t,r,i,s){const o=this.scene,l=this.camera,f=this.renderTargetA,u=this.renderTargetB,d=this.blurMaterial,m=d.kernelSequence;let E=t;this.fullscreenMaterial=d;for(let A=0,R=m.length;A<R;++A){const P=A&1?u:f;d.kernel=m[A],d.inputBuffer=E.texture,e.setRenderTarget(P),e.render(o,l),E=P}this.fullscreenMaterial=this.copyMaterial,this.copyMaterial.inputBuffer=E.texture,e.setRenderTarget(this.renderToScreen?null:r),e.render(o,l)}setSize(e,t){const r=this.resolution;r.setBaseSize(e,t);const i=r.width,s=r.height;this.renderTargetA.setSize(i,s),this.renderTargetB.setSize(i,s),this.blurMaterial.setSize(e,t)}initialize(e,t,r){r!==void 0&&(this.renderTargetA.texture.type=r,this.renderTargetB.texture.type=r,r!==We?(this.blurMaterial.defines.FRAMEBUFFER_PRECISION_HIGH="1",this.copyMaterial.defines.FRAMEBUFFER_PRECISION_HIGH="1"):ht(e)===le&&(Fe(this.renderTargetA.texture,le),Fe(this.renderTargetB.texture,le)))}static get AUTO_SIZE(){return pe.AUTO_SIZE}},dn=class extends Re{constructor({renderTarget:e,luminanceRange:t,colorOutput:r,resolutionScale:i=1,width:s=pe.AUTO_SIZE,height:o=pe.AUTO_SIZE,resolutionX:l=s,resolutionY:f=o}={}){super("LuminancePass"),this.fullscreenMaterial=new Xa(r,t),this.needsSwap=!1,this.renderTarget=e,this.renderTarget===void 0&&(this.renderTarget=new Le(1,1,{depthBuffer:!1}),this.renderTarget.texture.name="LuminancePass.Target");const u=this.resolution=new pe(this,l,f,i);u.addEventListener("change",d=>this.setSize(u.baseWidth,u.baseHeight))}get texture(){return this.renderTarget.texture}getTexture(){return this.renderTarget.texture}getResolution(){return this.resolution}render(e,t,r,i,s){const o=this.fullscreenMaterial;o.inputBuffer=t.texture,e.setRenderTarget(this.renderToScreen?null:this.renderTarget),e.render(this.scene,this.camera)}setSize(e,t){const r=this.resolution;r.setBaseSize(e,t),this.renderTarget.setSize(r.width,r.height)}initialize(e,t,r){r!==void 0&&r!==We&&(this.renderTarget.texture.type=r,this.fullscreenMaterial.defines.FRAMEBUFFER_PRECISION_HIGH="1")}},as=class extends Re{constructor(e,t){super("MaskPass",e,t),this.needsSwap=!1,this.clearPass=new hn(!1,!1,!0),this.inverse=!1}set mainScene(e){this.scene=e}set mainCamera(e){this.camera=e}get inverted(){return this.inverse}set inverted(e){this.inverse=e}get clear(){return this.clearPass.enabled}set clear(e){this.clearPass.enabled=e}getClearPass(){return this.clearPass}isInverted(){return this.inverted}setInverted(e){this.inverted=e}render(e,t,r,i,s){const o=e.getContext(),l=e.state.buffers,f=this.scene,u=this.camera,d=this.clearPass,m=this.inverted?0:1,E=1-m;l.color.setMask(!1),l.depth.setMask(!1),l.color.setLocked(!0),l.depth.setLocked(!0),l.stencil.setTest(!0),l.stencil.setOp(o.REPLACE,o.REPLACE,o.REPLACE),l.stencil.setFunc(o.ALWAYS,m,4294967295),l.stencil.setClear(E),l.stencil.setLocked(!0),this.clearPass.enabled&&(this.renderToScreen?d.render(e,null):(d.render(e,t),d.render(e,r))),this.renderToScreen?(e.setRenderTarget(null),e.render(f,u)):(e.setRenderTarget(t),e.render(f,u),e.setRenderTarget(r),e.render(f,u)),l.color.setLocked(!1),l.depth.setLocked(!1),l.stencil.setLocked(!1),l.stencil.setFunc(o.EQUAL,1,4294967295),l.stencil.setOp(o.KEEP,o.KEEP,o.KEEP),l.stencil.setLocked(!0)}},ss=class extends Re{constructor(){super("MipmapBlurPass"),this.needsSwap=!1,this.renderTarget=new Le(1,1,{depthBuffer:!1}),this.renderTarget.texture.name="Upsampling.Mipmap0",this.downsamplingMipmaps=[],this.upsamplingMipmaps=[],this.downsamplingMaterial=new Ga,this.upsamplingMaterial=new Ka,this.resolution=new Ee}get texture(){return this.renderTarget.texture}get levels(){return this.downsamplingMipmaps.length}set levels(e){if(this.levels!==e){const t=this.renderTarget;this.dispose(),this.downsamplingMipmaps=[],this.upsamplingMipmaps=[];for(let r=0;r<e;++r){const i=t.clone();i.texture.name="Downsampling.Mipmap"+r,this.downsamplingMipmaps.push(i)}this.upsamplingMipmaps.push(t);for(let r=1,i=e-1;r<i;++r){const s=t.clone();s.texture.name="Upsampling.Mipmap"+r,this.upsamplingMipmaps.push(s)}this.setSize(this.resolution.x,this.resolution.y)}}get radius(){return this.upsamplingMaterial.radius}set radius(e){this.upsamplingMaterial.radius=e}render(e,t,r,i,s){const{scene:o,camera:l}=this,{downsamplingMaterial:f,upsamplingMaterial:u}=this,{downsamplingMipmaps:d,upsamplingMipmaps:m}=this;let E=t;this.fullscreenMaterial=f;for(let A=0,R=d.length;A<R;++A){const P=d[A];f.setSize(E.width,E.height),f.inputBuffer=E.texture,e.setRenderTarget(P),e.render(o,l),E=P}this.fullscreenMaterial=u;for(let A=m.length-1;A>=0;--A){const R=m[A];u.setSize(E.width,E.height),u.inputBuffer=E.texture,u.supportBuffer=d[A].texture,e.setRenderTarget(R),e.render(o,l),E=R}}setSize(e,t){const r=this.resolution;r.set(e,t);let i=r.width,s=r.height;for(let o=0,l=this.downsamplingMipmaps.length;o<l;++o)i=Math.round(i*.5),s=Math.round(s*.5),this.downsamplingMipmaps[o].setSize(i,s),o<this.upsamplingMipmaps.length&&this.upsamplingMipmaps[o].setSize(i,s)}initialize(e,t,r){if(r!==void 0){const i=this.downsamplingMipmaps.concat(this.upsamplingMipmaps);for(const s of i)s.texture.type=r;if(r!==We)this.downsamplingMaterial.defines.FRAMEBUFFER_PRECISION_HIGH="1",this.upsamplingMaterial.defines.FRAMEBUFFER_PRECISION_HIGH="1";else if(ht(e)===le)for(const s of i)Fe(s.texture,le)}}dispose(){super.dispose();for(const e of this.downsamplingMipmaps.concat(this.upsamplingMipmaps))e.dispose()}},os=class extends Re{constructor(e,t,{renderTarget:r,resolutionScale:i=1,width:s=pe.AUTO_SIZE,height:o=pe.AUTO_SIZE,resolutionX:l=s,resolutionY:f=o}={}){super("NormalPass"),this.needsSwap=!1,this.renderPass=new fn(e,t,new Ei);const u=this.renderPass;u.ignoreBackground=!0,u.skipShadowMapUpdate=!0;const d=u.getClearPass();d.overrideClearColor=new ft(7829503),d.overrideClearAlpha=1,this.renderTarget=r,this.renderTarget===void 0&&(this.renderTarget=new Le(1,1,{minFilter:Je,magFilter:Je}),this.renderTarget.texture.name="NormalPass.Target");const m=this.resolution=new pe(this,l,f,i);m.addEventListener("change",E=>this.setSize(m.baseWidth,m.baseHeight))}set mainScene(e){this.renderPass.mainScene=e}set mainCamera(e){this.renderPass.mainCamera=e}get texture(){return this.renderTarget.texture}getTexture(){return this.renderTarget.texture}getResolution(){return this.resolution}getResolutionScale(){return this.resolution.scale}setResolutionScale(e){this.resolution.scale=e}render(e,t,r,i,s){const o=this.renderToScreen?null:this.renderTarget;this.renderPass.render(e,o,o)}setSize(e,t){const r=this.resolution;r.setBaseSize(e,t),this.renderTarget.setSize(r.width,r.height)}},Yt=1/1e3,ls=1e3,cs=class{constructor(){this.startTime=performance.now(),this.previousTime=0,this.currentTime=0,this._delta=0,this._elapsed=0,this._fixedDelta=1e3/60,this.timescale=1,this.useFixedDelta=!1,this._autoReset=!1}get autoReset(){return this._autoReset}set autoReset(e){typeof document<"u"&&document.hidden!==void 0&&(e?document.addEventListener("visibilitychange",this):document.removeEventListener("visibilitychange",this),this._autoReset=e)}get delta(){return this._delta*Yt}get fixedDelta(){return this._fixedDelta*Yt}set fixedDelta(e){this._fixedDelta=e*ls}get elapsed(){return this._elapsed*Yt}update(e){this.useFixedDelta?this._delta=this.fixedDelta:(this.previousTime=this.currentTime,this.currentTime=(e!==void 0?e:performance.now())-this.startTime,this._delta=this.currentTime-this.previousTime),this._delta*=this.timescale,this._elapsed+=this._delta}reset(){this._delta=0,this._elapsed=0,this.currentTime=performance.now()-this.startTime}handleEvent(e){document.hidden||(this.currentTime=performance.now()-this.startTime)}dispose(){this.autoReset=!1}},us=class{constructor(t=null,{depthBuffer:r=!0,stencilBuffer:i=!1,multisampling:s=0,frameBufferType:o}={}){this.renderer=null,this.inputBuffer=this.createBuffer(r,i,o,s),this.outputBuffer=this.inputBuffer.clone(),this.copyPass=new un,this.depthTexture=null,this.passes=[],this.timer=new cs,this.autoRenderToScreen=!0,this.setRenderer(t)}get multisampling(){return this.inputBuffer.samples||0}set multisampling(t){const r=this.inputBuffer,i=this.multisampling;i>0&&t>0?(this.inputBuffer.samples=t,this.outputBuffer.samples=t,this.inputBuffer.dispose(),this.outputBuffer.dispose()):i!==t&&(this.inputBuffer.dispose(),this.outputBuffer.dispose(),this.inputBuffer=this.createBuffer(r.depthBuffer,r.stencilBuffer,r.texture.type,t),this.inputBuffer.depthTexture=this.depthTexture,this.outputBuffer=this.inputBuffer.clone())}getTimer(){return this.timer}getRenderer(){return this.renderer}setRenderer(t){if(this.renderer=t,t!==null){const r=t.getSize(new Ee),i=t.getContext().getContextAttributes().alpha,s=this.inputBuffer.texture.type;s===We&&ht(t)===le&&(Fe(this.inputBuffer.texture,le),Fe(this.outputBuffer.texture,le),this.inputBuffer.dispose(),this.outputBuffer.dispose()),t.autoClear=!1,this.setSize(r.width,r.height);for(const o of this.passes)o.initialize(t,i,s)}}replaceRenderer(t,r=!0){const i=this.renderer,s=i.domElement.parentNode;return this.setRenderer(t),r&&s!==null&&(s.removeChild(i.domElement),s.appendChild(t.domElement)),i}createDepthTexture(){const t=this.depthTexture=new Ti;return this.inputBuffer.depthTexture=t,this.inputBuffer.dispose(),this.inputBuffer.stencilBuffer?(t.format=_i,t.type=wi):t.type=yi,t}deleteDepthTexture(){if(this.depthTexture!==null){this.depthTexture.dispose(),this.depthTexture=null,this.inputBuffer.depthTexture=null,this.inputBuffer.dispose();for(const t of this.passes)t.setDepthTexture(null)}}createBuffer(t,r,i,s){const o=this.renderer,l=o===null?new Ee:o.getDrawingBufferSize(new Ee),f={minFilter:Me,magFilter:Me,stencilBuffer:r,depthBuffer:t,type:i},u=new Le(l.width,l.height,f);return s>0&&(u.ignoreDepthForMultisampleCopy=!1,u.samples=s),i===We&&ht(o)===le&&Fe(u.texture,le),u.texture.name="EffectComposer.Buffer",u.texture.generateMipmaps=!1,u}setMainScene(t){for(const r of this.passes)r.mainScene=t}setMainCamera(t){for(const r of this.passes)r.mainCamera=t}addPass(t,r){const i=this.passes,s=this.renderer,o=s.getDrawingBufferSize(new Ee),l=s.getContext().getContextAttributes().alpha,f=this.inputBuffer.texture.type;if(t.setRenderer(s),t.setSize(o.width,o.height),t.initialize(s,l,f),this.autoRenderToScreen&&(i.length>0&&(i[i.length-1].renderToScreen=!1),t.renderToScreen&&(this.autoRenderToScreen=!1)),r!==void 0?i.splice(r,0,t):i.push(t),this.autoRenderToScreen&&(i[i.length-1].renderToScreen=!0),t.needsDepthTexture||this.depthTexture!==null)if(this.depthTexture===null){const u=this.createDepthTexture();for(t of i)t.setDepthTexture(u)}else t.setDepthTexture(this.depthTexture)}removePass(t){const r=this.passes,i=r.indexOf(t);if(i!==-1&&r.splice(i,1).length>0){if(this.depthTexture!==null){const l=(u,d)=>u||d.needsDepthTexture;r.reduce(l,!1)||(t.getDepthTexture()===this.depthTexture&&t.setDepthTexture(null),this.deleteDepthTexture())}this.autoRenderToScreen&&i===r.length&&(t.renderToScreen=!1,r.length>0&&(r[r.length-1].renderToScreen=!0))}}removeAllPasses(){const t=this.passes;this.deleteDepthTexture(),t.length>0&&(this.autoRenderToScreen&&(t[t.length-1].renderToScreen=!1),this.passes=[])}render(t){const r=this.renderer,i=this.copyPass;let s=this.inputBuffer,o=this.outputBuffer,l=!1,f,u,d;t===void 0&&(this.timer.update(),t=this.timer.delta);for(const m of this.passes)m.enabled&&(m.render(r,s,o,t,l),m.needsSwap&&(l&&(i.renderToScreen=m.renderToScreen,f=r.getContext(),u=r.state.buffers.stencil,u.setFunc(f.NOTEQUAL,1,4294967295),i.render(r,s,o,t,l),u.setFunc(f.EQUAL,1,4294967295)),d=s,s=o,o=d),m instanceof as?l=!0:m instanceof es&&(l=!1))}setSize(t,r,i){const s=this.renderer,o=s.getSize(new Ee);(t===void 0||r===void 0)&&(t=o.width,r=o.height),(o.width!==t||o.height!==r)&&s.setSize(t,r,i);const l=s.getDrawingBufferSize(new Ee);this.inputBuffer.setSize(l.width,l.height),this.outputBuffer.setSize(l.width,l.height);for(const f of this.passes)f.setSize(l.width,l.height)}reset(){const t=this.timer.autoReset;this.dispose(),this.autoRenderToScreen=!0,this.timer.autoReset=t}dispose(){for(const t of this.passes)t.dispose();this.passes=[],this.inputBuffer!==null&&this.inputBuffer.dispose(),this.outputBuffer!==null&&this.outputBuffer.dispose(),this.deleteDepthTexture(),this.copyPass.dispose(),this.timer.dispose()}},hs=class{constructor(){this.shaderParts=new Map([[K.FRAGMENT_HEAD,null],[K.FRAGMENT_MAIN_UV,null],[K.FRAGMENT_MAIN_IMAGE,null],[K.VERTEX_HEAD,null],[K.VERTEX_MAIN_SUPPORT,null]]),this.defines=new Map,this.uniforms=new Map,this.blendModes=new Map,this.extensions=new Set,this.attributes=Oe.NONE,this.varyings=new Set,this.uvTransformation=!1,this.readDepth=!1,this.colorSpace=ut}},Kt=!1,Fr=class{constructor(e=null){this.originalMaterials=new Map,this.material=null,this.materials=null,this.materialsBackSide=null,this.materialsDoubleSide=null,this.materialsFlatShaded=null,this.materialsFlatShadedBackSide=null,this.materialsFlatShadedDoubleSide=null,this.setMaterial(e),this.meshCount=0,this.replaceMaterial=t=>{if(t.isMesh){let r;if(t.material.flatShading)switch(t.material.side){case ot:r=this.materialsFlatShadedDoubleSide;break;case wt:r=this.materialsFlatShadedBackSide;break;default:r=this.materialsFlatShaded;break}else switch(t.material.side){case ot:r=this.materialsDoubleSide;break;case wt:r=this.materialsBackSide;break;default:r=this.materials;break}this.originalMaterials.set(t,t.material),t.isSkinnedMesh?t.material=r[2]:t.isInstancedMesh?t.material=r[1]:t.material=r[0],++this.meshCount}}}cloneMaterial(e){if(!(e instanceof ke))return e.clone();const t=e.uniforms,r=new Map;for(const s in t){const o=t[s].value;o.isRenderTargetTexture&&(t[s].value=null,r.set(s,o))}const i=e.clone();for(const s of r)t[s[0]].value=s[1],i.uniforms[s[0]].value=s[1];return i}setMaterial(e){if(this.disposeMaterials(),this.material=e,e!==null){const t=this.materials=[this.cloneMaterial(e),this.cloneMaterial(e),this.cloneMaterial(e)];for(const r of t)r.uniforms=Object.assign({},e.uniforms),r.side=Zr;t[2].skinning=!0,this.materialsBackSide=t.map(r=>{const i=this.cloneMaterial(r);return i.uniforms=Object.assign({},e.uniforms),i.side=wt,i}),this.materialsDoubleSide=t.map(r=>{const i=this.cloneMaterial(r);return i.uniforms=Object.assign({},e.uniforms),i.side=ot,i}),this.materialsFlatShaded=t.map(r=>{const i=this.cloneMaterial(r);return i.uniforms=Object.assign({},e.uniforms),i.flatShading=!0,i}),this.materialsFlatShadedBackSide=t.map(r=>{const i=this.cloneMaterial(r);return i.uniforms=Object.assign({},e.uniforms),i.flatShading=!0,i.side=wt,i}),this.materialsFlatShadedDoubleSide=t.map(r=>{const i=this.cloneMaterial(r);return i.uniforms=Object.assign({},e.uniforms),i.flatShading=!0,i.side=ot,i})}}render(e,t,r){const i=e.shadowMap.enabled;if(e.shadowMap.enabled=!1,Kt){const s=this.originalMaterials;this.meshCount=0,t.traverse(this.replaceMaterial),e.render(t,r);for(const o of s)o[0].material=o[1];this.meshCount!==s.size&&s.clear()}else{const s=t.overrideMaterial;t.overrideMaterial=this.material,e.render(t,r),t.overrideMaterial=s}e.shadowMap.enabled=i}disposeMaterials(){if(this.material!==null){const e=this.materials.concat(this.materialsBackSide).concat(this.materialsDoubleSide).concat(this.materialsFlatShaded).concat(this.materialsFlatShadedBackSide).concat(this.materialsFlatShadedDoubleSide);for(const t of e)t.dispose()}}dispose(){this.originalMaterials.clear(),this.disposeMaterials()}static get workaroundEnabled(){return Kt}static set workaroundEnabled(e){Kt=e}},qe=-1,pe=class extends ar{constructor(e,t=qe,r=qe,i=1){super(),this.resizable=e,this.baseSize=new Ee(1,1),this.preferredSize=new Ee(t,r),this.target=this.preferredSize,this.s=i,this.effectiveSize=new Ee,this.addEventListener("change",()=>this.updateEffectiveSize()),this.updateEffectiveSize()}updateEffectiveSize(){const e=this.baseSize,t=this.preferredSize,r=this.effectiveSize,i=this.scale;t.width!==qe?r.width=t.width:t.height!==qe?r.width=Math.round(t.height*(e.width/Math.max(e.height,1))):r.width=Math.round(e.width*i),t.height!==qe?r.height=t.height:t.width!==qe?r.height=Math.round(t.width/Math.max(e.width/Math.max(e.height,1),1)):r.height=Math.round(e.height*i)}get width(){return this.effectiveSize.width}set width(e){this.preferredWidth=e}get height(){return this.effectiveSize.height}set height(e){this.preferredHeight=e}getWidth(){return this.width}getHeight(){return this.height}get scale(){return this.s}set scale(e){this.s!==e&&(this.s=e,this.preferredSize.setScalar(qe),this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height))}getScale(){return this.scale}setScale(e){this.scale=e}get baseWidth(){return this.baseSize.width}set baseWidth(e){this.baseSize.width!==e&&(this.baseSize.width=e,this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height))}getBaseWidth(){return this.baseWidth}setBaseWidth(e){this.baseWidth=e}get baseHeight(){return this.baseSize.height}set baseHeight(e){this.baseSize.height!==e&&(this.baseSize.height=e,this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height))}getBaseHeight(){return this.baseHeight}setBaseHeight(e){this.baseHeight=e}setBaseSize(e,t){(this.baseSize.width!==e||this.baseSize.height!==t)&&(this.baseSize.set(e,t),this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height))}get preferredWidth(){return this.preferredSize.width}set preferredWidth(e){this.preferredSize.width!==e&&(this.preferredSize.width=e,this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height))}getPreferredWidth(){return this.preferredWidth}setPreferredWidth(e){this.preferredWidth=e}get preferredHeight(){return this.preferredSize.height}set preferredHeight(e){this.preferredSize.height!==e&&(this.preferredSize.height=e,this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height))}getPreferredHeight(){return this.preferredHeight}setPreferredHeight(e){this.preferredHeight=e}setPreferredSize(e,t){(this.preferredSize.width!==e||this.preferredSize.height!==t)&&(this.preferredSize.set(e,t),this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height))}copy(e){this.s=e.scale,this.baseSize.set(e.baseWidth,e.baseHeight),this.preferredSize.set(e.preferredWidth,e.preferredHeight),this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height)}static get AUTO_SIZE(){return qe}},fs="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,x+y,opacity);}",ds="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,y,min(y.a,opacity));}",vs="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,(x+y)*0.5,opacity);}",ps="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec3 xHSL=RGBToHSL(x.rgb);vec3 yHSL=RGBToHSL(y.rgb);vec3 z=HSLToRGB(vec3(yHSL.rg,xHSL.b));return vec4(mix(x.rgb,z,opacity),y.a);}",ms="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 z=mix(step(0.0,y)*(1.0-min(vec4(1.0),(1.0-x)/y)),vec4(1.0),step(1.0,x));return mix(x,z,opacity);}",gs="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 z=step(0.0,x)*mix(min(vec4(1.0),x/max(1.0-y,1e-9)),vec4(1.0),step(1.0,y));return mix(x,z,opacity);}",Ss="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,min(x,y),opacity);}",xs="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,abs(x-y),opacity);}",Es="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,x/max(y,1e-12),opacity);}",Ts="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,(x+y-2.0*x*y),opacity);}",_s="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 a=min(x,1.0),b=min(y,1.0);vec4 z=mix(2.0*a*b,1.0-2.0*(1.0-a)*(1.0-b),step(0.5,y));return mix(x,z,opacity);}",ws="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,step(1.0,x+y),opacity);}",ys="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec3 xHSL=RGBToHSL(x.rgb);vec3 yHSL=RGBToHSL(y.rgb);vec3 z=HSLToRGB(vec3(yHSL.r,xHSL.gb));return vec4(mix(x.rgb,z,opacity),y.a);}",Ms="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,1.0-y,opacity);}",Rs="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,y*(1.0-x),opacity);}",bs="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,max(x,y),opacity);}",As="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,clamp(y+x-1.0,0.0,1.0),opacity);}",Is="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,min(x+y,1.0),opacity);}",Us="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,clamp(2.0*y+x-1.0,0.0,1.0),opacity);}",Cs="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec3 xHSL=RGBToHSL(x.rgb);vec3 yHSL=RGBToHSL(y.rgb);vec3 z=HSLToRGB(vec3(xHSL.rg,yHSL.b));return vec4(mix(x.rgb,z,opacity),y.a);}",Bs="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,x*y,opacity);}",Ds="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,1.0-abs(1.0-x-y),opacity);}",Ls="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,y,opacity);}",Ns="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 z=mix(2.0*y*x,1.0-2.0*(1.0-y)*(1.0-x),step(0.5,x));return mix(x,z,opacity);}",Ps="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 y2=2.0*y;vec4 z=mix(mix(y2,x,step(0.5*x,y)),max(vec4(0.0),y2-1.0),step(x,(y2-1.0)));return mix(x,z,opacity);}",Fs="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 z=mix(min(x*x/max(1.0-y,1e-12),1.0),y,step(1.0,y));return mix(x,z,opacity);}",zs="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec3 xHSL=RGBToHSL(x.rgb);vec3 yHSL=RGBToHSL(y.rgb);vec3 z=HSLToRGB(vec3(xHSL.r,yHSL.g,xHSL.b));return vec4(mix(x.rgb,z,opacity),y.a);}",Os="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,x+y-min(x*y,1.0),opacity);}",Hs="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 y2=2.0*y;vec4 w=step(0.5,y);vec4 z=mix(x-(1.0-y2)*x*(1.0-x),mix(x+(y2-1.0)*(sqrt(x)-x),x+(y2-1.0)*x*((16.0*x-12.0)*x+3.0),w*(1.0-step(0.25,x))),w);return mix(x,z,opacity);}",ks="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return y;}",Gs="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,max(x+y-1.0,0.0),opacity);}",Vs="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 z=mix(max(1.0-min((1.0-x)/(2.0*y),1.0),0.0),min(x/(2.0*(1.0-y)),1.0),step(0.5,y));return mix(x,z,opacity);}",js=new Map([[V.ADD,fs],[V.ALPHA,ds],[V.AVERAGE,vs],[V.COLOR,ps],[V.COLOR_BURN,ms],[V.COLOR_DODGE,gs],[V.DARKEN,Ss],[V.DIFFERENCE,xs],[V.DIVIDE,Es],[V.DST,null],[V.EXCLUSION,Ts],[V.HARD_LIGHT,_s],[V.HARD_MIX,ws],[V.HUE,ys],[V.INVERT,Ms],[V.INVERT_RGB,Rs],[V.LIGHTEN,bs],[V.LINEAR_BURN,As],[V.LINEAR_DODGE,Is],[V.LINEAR_LIGHT,Us],[V.LUMINOSITY,Cs],[V.MULTIPLY,Bs],[V.NEGATION,Ds],[V.NORMAL,Ls],[V.OVERLAY,Ns],[V.PIN_LIGHT,Ps],[V.REFLECT,Fs],[V.SATURATION,zs],[V.SCREEN,Os],[V.SOFT_LIGHT,Hs],[V.SRC,ks],[V.SUBTRACT,Gs],[V.VIVID_LIGHT,Vs]]),Zs=class extends ar{constructor(e,t=1){super(),this._blendFunction=e,this.opacity=new N(t)}getOpacity(){return this.opacity.value}setOpacity(e){this.opacity.value=e}get blendFunction(){return this._blendFunction}set blendFunction(e){this._blendFunction=e,this.dispatchEvent({type:"change"})}getBlendFunction(){return this.blendFunction}setBlendFunction(e){this.blendFunction=e}getShaderCode(){return js.get(this.blendFunction)}},it=class extends ar{constructor(e,t,{attributes:r=Oe.NONE,blendFunction:i=V.NORMAL,defines:s=new Map,uniforms:o=new Map,extensions:l=null,vertexShader:f=null}={}){super(),this.name=e,this.renderer=null,this.attributes=r,this.fragmentShader=t,this.vertexShader=f,this.defines=s,this.uniforms=o,this.extensions=l,this.blendMode=new Zs(i),this.blendMode.addEventListener("change",u=>this.setChanged()),this._inputColorSpace=ut,this._outputColorSpace=sn}get inputColorSpace(){return this._inputColorSpace}set inputColorSpace(e){this._inputColorSpace=e,this.setChanged()}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e,this.setChanged()}set mainScene(e){}set mainCamera(e){}getName(){return this.name}setRenderer(e){this.renderer=e}getDefines(){return this.defines}getUniforms(){return this.uniforms}getExtensions(){return this.extensions}getBlendMode(){return this.blendMode}getAttributes(){return this.attributes}setAttributes(e){this.attributes=e,this.setChanged()}getFragmentShader(){return this.fragmentShader}setFragmentShader(e){this.fragmentShader=e,this.setChanged()}getVertexShader(){return this.vertexShader}setVertexShader(e){this.vertexShader=e,this.setChanged()}setChanged(){this.dispatchEvent({type:"change"})}setDepthTexture(e,t=dt){}update(e,t,r){}setSize(e,t){}initialize(e,t,r){}dispose(){for(const e of Object.keys(this)){const t=this[e];(t instanceof Le||t instanceof $r||t instanceof nr||t instanceof Re)&&this[e].dispose()}}},Ws=`#ifdef FRAMEBUFFER_PRECISION_HIGH
uniform mediump sampler2D map;
#else
uniform lowp sampler2D map;
#endif
uniform float intensity;void mainImage(const in vec4 inputColor,const in vec2 uv,out vec4 outputColor){vec4 texel=texture2D(map,uv);outputColor=vec4(texel.rgb*intensity,texel.a);}`,Xs=class extends it{constructor({blendFunction:e=V.SCREEN,luminanceThreshold:t=.9,luminanceSmoothing:r=.025,mipmapBlur:i=!1,intensity:s=1,radius:o=.85,levels:l=8,kernelSize:f=fr.LARGE,resolutionScale:u=.5,width:d=pe.AUTO_SIZE,height:m=pe.AUTO_SIZE,resolutionX:E=d,resolutionY:A=m}={}){super("BloomEffect",Ws,{blendFunction:e,uniforms:new Map([["map",new N(null)],["intensity",new N(s)]])}),this.renderTarget=new Le(1,1,{depthBuffer:!1}),this.renderTarget.texture.name="Bloom.Target",this.blurPass=new is({kernelSize:f}),this.luminancePass=new dn({colorOutput:!0}),this.luminanceMaterial.threshold=t,this.luminanceMaterial.smoothing=r,this.mipmapBlurPass=new ss,this.mipmapBlurPass.enabled=i,this.mipmapBlurPass.radius=o,this.mipmapBlurPass.levels=l,this.uniforms.get("map").value=i?this.mipmapBlurPass.texture:this.renderTarget.texture;const R=this.resolution=new pe(this,E,A,u);R.addEventListener("change",P=>this.setSize(R.baseWidth,R.baseHeight))}get texture(){return this.mipmapBlurPass.enabled?this.mipmapBlurPass.texture:this.renderTarget.texture}getTexture(){return this.texture}getResolution(){return this.resolution}getBlurPass(){return this.blurPass}getLuminancePass(){return this.luminancePass}get luminanceMaterial(){return this.luminancePass.fullscreenMaterial}getLuminanceMaterial(){return this.luminancePass.fullscreenMaterial}get width(){return this.resolution.width}set width(e){this.resolution.preferredWidth=e}get height(){return this.resolution.height}set height(e){this.resolution.preferredHeight=e}get dithering(){return this.blurPass.dithering}set dithering(e){this.blurPass.dithering=e}get kernelSize(){return this.blurPass.kernelSize}set kernelSize(e){this.blurPass.kernelSize=e}get distinction(){return console.warn(this.name,"distinction was removed"),1}set distinction(e){console.warn(this.name,"distinction was removed")}get intensity(){return this.uniforms.get("intensity").value}set intensity(e){this.uniforms.get("intensity").value=e}getIntensity(){return this.intensity}setIntensity(e){this.intensity=e}getResolutionScale(){return this.resolution.scale}setResolutionScale(e){this.resolution.scale=e}update(e,t,r){const i=this.renderTarget,s=this.luminancePass;s.enabled?(s.render(e,t),this.mipmapBlurPass.enabled?this.mipmapBlurPass.render(e,s.renderTarget):this.blurPass.render(e,s.renderTarget,i)):this.mipmapBlurPass.enabled?this.mipmapBlurPass.render(e,t):this.blurPass.render(e,t,i)}setSize(e,t){const r=this.resolution;r.setBaseSize(e,t),this.renderTarget.setSize(r.width,r.height),this.blurPass.resolution.copy(r),this.luminancePass.setSize(e,t),this.mipmapBlurPass.setSize(e,t)}initialize(e,t,r){this.blurPass.initialize(e,t,r),this.luminancePass.initialize(e,t,r),this.mipmapBlurPass.initialize(e,t,r),r!==void 0&&(this.renderTarget.texture.type=r,ht(e)===le&&Fe(this.renderTarget.texture,le))}},$s="uniform float brightness;uniform float contrast;void mainImage(const in vec4 inputColor,const in vec2 uv,out vec4 outputColor){vec3 color=inputColor.rgb+vec3(brightness-0.5);if(contrast>0.0){color/=vec3(1.0-contrast);}else{color*=vec3(1.0+contrast);}outputColor=vec4(color+vec3(0.5),inputColor.a);}",Ys=class extends it{constructor({blendFunction:e=V.SRC,brightness:t=0,contrast:r=0}={}){super("BrightnessContrastEffect",$s,{blendFunction:e,uniforms:new Map([["brightness",new N(t)],["contrast",new N(r)]])}),this.inputColorSpace=le}get brightness(){return this.uniforms.get("brightness").value}set brightness(e){this.uniforms.get("brightness").value=e}getBrightness(){return this.brightness}setBrightness(e){this.brightness=e}get contrast(){return this.uniforms.get("contrast").value}set contrast(e){this.uniforms.get("contrast").value=e}getContrast(){return this.contrast}setContrast(e){this.contrast=e}};function zr(e,t,r){const i=document.createElement("canvas"),s=i.getContext("2d");if(i.width=e,i.height=t,r instanceof Image)s.drawImage(r,0,0);else{const o=s.createImageData(e,t);o.data.set(r),s.putImageData(o,0,0)}return i}var Ks=class vn{constructor(t=0,r=0,i=null){this.width=t,this.height=r,this.data=i}toCanvas(){return typeof document>"u"?null:zr(this.width,this.height,this.data)}static from(t){const{width:r,height:i}=t;let s;if(t instanceof Image){const o=zr(r,i,t);o!==null&&(s=o.getContext("2d").getImageData(0,0,r,i).data)}else s=t.data;return new vn(r,i,s)}},qs=`"use strict";(()=>{var O={SCALE_UP:"lut.scaleup"};var _=[new Float32Array(3),new Float32Array(3)],n=[new Float32Array(3),new Float32Array(3),new Float32Array(3),new Float32Array(3)],Z=[[new Float32Array([0,0,0]),new Float32Array([1,0,0]),new Float32Array([1,1,0]),new Float32Array([1,1,1])],[new Float32Array([0,0,0]),new Float32Array([1,0,0]),new Float32Array([1,0,1]),new Float32Array([1,1,1])],[new Float32Array([0,0,0]),new Float32Array([0,0,1]),new Float32Array([1,0,1]),new Float32Array([1,1,1])],[new Float32Array([0,0,0]),new Float32Array([0,1,0]),new Float32Array([1,1,0]),new Float32Array([1,1,1])],[new Float32Array([0,0,0]),new Float32Array([0,1,0]),new Float32Array([0,1,1]),new Float32Array([1,1,1])],[new Float32Array([0,0,0]),new Float32Array([0,0,1]),new Float32Array([0,1,1]),new Float32Array([1,1,1])]];function d(a,t,r,m){let i=r[0]-t[0],e=r[1]-t[1],y=r[2]-t[2],h=a[0]-t[0],A=a[1]-t[1],w=a[2]-t[2],c=e*w-y*A,l=y*h-i*w,x=i*A-e*h,u=Math.sqrt(c*c+l*l+x*x),b=u*.5,s=c/u,F=l/u,f=x/u,p=-(a[0]*s+a[1]*F+a[2]*f),M=m[0]*s+m[1]*F+m[2]*f;return Math.abs(M+p)*b/3}function V(a,t,r,m,i,e){let y=(r+m*t+i*t*t)*4;e[0]=a[y+0],e[1]=a[y+1],e[2]=a[y+2]}function k(a,t,r,m,i,e){let y=r*(t-1),h=m*(t-1),A=i*(t-1),w=Math.floor(y),c=Math.floor(h),l=Math.floor(A),x=Math.ceil(y),u=Math.ceil(h),b=Math.ceil(A),s=y-w,F=h-c,f=A-l;if(w===y&&c===h&&l===A)V(a,t,y,h,A,e);else{let p;s>=F&&F>=f?p=Z[0]:s>=f&&f>=F?p=Z[1]:f>=s&&s>=F?p=Z[2]:F>=s&&s>=f?p=Z[3]:F>=f&&f>=s?p=Z[4]:f>=F&&F>=s&&(p=Z[5]);let[M,g,X,Y]=p,P=_[0];P[0]=s,P[1]=F,P[2]=f;let o=_[1],L=x-w,S=u-c,U=b-l;o[0]=L*M[0]+w,o[1]=S*M[1]+c,o[2]=U*M[2]+l,V(a,t,o[0],o[1],o[2],n[0]),o[0]=L*g[0]+w,o[1]=S*g[1]+c,o[2]=U*g[2]+l,V(a,t,o[0],o[1],o[2],n[1]),o[0]=L*X[0]+w,o[1]=S*X[1]+c,o[2]=U*X[2]+l,V(a,t,o[0],o[1],o[2],n[2]),o[0]=L*Y[0]+w,o[1]=S*Y[1]+c,o[2]=U*Y[2]+l,V(a,t,o[0],o[1],o[2],n[3]);let T=d(g,X,Y,P)*6,q=d(M,X,Y,P)*6,C=d(M,g,Y,P)*6,E=d(M,g,X,P)*6;n[0][0]*=T,n[0][1]*=T,n[0][2]*=T,n[1][0]*=q,n[1][1]*=q,n[1][2]*=q,n[2][0]*=C,n[2][1]*=C,n[2][2]*=C,n[3][0]*=E,n[3][1]*=E,n[3][2]*=E,e[0]=n[0][0]+n[1][0]+n[2][0]+n[3][0],e[1]=n[0][1]+n[1][1]+n[2][1]+n[3][1],e[2]=n[0][2]+n[1][2]+n[2][2]+n[3][2]}}var v=class{static expand(t,r){let m=Math.cbrt(t.length/4),i=new Float32Array(3),e=new t.constructor(r**3*4),y=t instanceof Uint8Array?255:1,h=r**2,A=1/(r-1);for(let w=0;w<r;++w)for(let c=0;c<r;++c)for(let l=0;l<r;++l){let x=l*A,u=c*A,b=w*A,s=Math.round(l+c*r+w*h)*4;k(t,m,x,u,b,i),e[s+0]=i[0],e[s+1]=i[1],e[s+2]=i[2],e[s+3]=y}return e}};self.addEventListener("message",a=>{let t=a.data,r=t.data;switch(t.operation){case O.SCALE_UP:r=v.expand(r,t.size);break}postMessage(r,[r.buffer]),close()});})();
`,Or=new ft,pn=class Nt extends Lt{constructor(t,r){super(t,r,r,r),this.type=xe,this.format=Dt,this.minFilter=Me,this.magFilter=Me,this.wrapS=zt,this.wrapT=zt,this.wrapR=zt,this.unpackAlignment=1,this.needsUpdate=!0,Fe(this,ut),this.domainMin=new He(0,0,0),this.domainMax=new He(1,1,1)}get isLookupTexture3D(){return!0}scaleUp(t,r=!0){const i=this.image;let s;return t<=i.width?s=Promise.reject(new Error("The target size must be greater than the current size")):s=new Promise((o,l)=>{const f=URL.createObjectURL(new Blob([qs],{type:"text/javascript"})),u=new Worker(f);u.addEventListener("error",m=>l(m.error)),u.addEventListener("message",m=>{const E=new Nt(m.data,t);$t(this,E),E.type=this.type,E.name=this.name,URL.revokeObjectURL(f),o(E)});const d=r?[i.data.buffer]:[];u.postMessage({operation:Ia.SCALE_UP,data:i.data,size:t},d)}),s}applyLUT(t){const r=this.image,i=t.image,s=Math.min(r.width,r.height,r.depth),o=Math.min(i.width,i.height,i.depth);if(s!==o)console.error("Size mismatch");else if(t.type!==xe||this.type!==xe)console.error("Both LUTs must be FloatType textures");else if(t.format!==Dt||this.format!==Dt)console.error("Both LUTs must be RGBA textures");else{const l=r.data,f=i.data,u=s,d=u**2,m=u-1;for(let E=0,A=u**3;E<A;++E){const R=E*4,P=l[R+0]*m,G=l[R+1]*m,W=l[R+2]*m,X=Math.round(P+G*u+W*d)*4;l[R+0]=f[X+0],l[R+1]=f[X+1],l[R+2]=f[X+2]}this.needsUpdate=!0}return this}convertToUint8(){if(this.type===xe){const t=this.image.data,r=new Uint8Array(t.length);for(let i=0,s=t.length;i<s;++i)r[i]=t[i]*255+.5;this.image.data=r,this.type=We,this.needsUpdate=!0}return this}convertToFloat(){if(this.type===We){const t=this.image.data,r=new Float32Array(t.length);for(let i=0,s=t.length;i<s;++i)r[i]=t[i]/255;this.image.data=r,this.type=xe,this.needsUpdate=!0}return this}convertToRGBA(){return console.warn("LookupTexture","convertToRGBA() is deprecated, LUTs are now RGBA by default"),this}convertLinearToSRGB(){const t=this.image.data;if(this.type===xe){for(let r=0,i=t.length;r<i;r+=4)Or.fromArray(t,r).convertLinearToSRGB().toArray(t,r);Fe(this,le),this.needsUpdate=!0}else console.error("Color space conversion requires FloatType data");return this}convertSRGBToLinear(){const t=this.image.data;if(this.type===xe){for(let r=0,i=t.length;r<i;r+=4)Or.fromArray(t,r).convertSRGBToLinear().toArray(t,r);Fe(this,ut),this.needsUpdate=!0}else console.error("Color space conversion requires FloatType data");return this}toDataTexture(){const t=this.image.width,r=this.image.height*this.image.depth,i=new Ui(this.image.data,t,r);return i.name=this.name,i.type=this.type,i.format=this.format,i.minFilter=Me,i.magFilter=Me,i.wrapS=this.wrapS,i.wrapT=this.wrapT,i.generateMipmaps=!1,i.needsUpdate=!0,$t(this,i),i}static from(t){const r=t.image,{width:i,height:s}=r,o=Math.min(i,s);let l;if(r instanceof Image){const d=Ks.from(r).data;if(i>s){l=new Uint8Array(d.length);for(let m=0;m<o;++m)for(let E=0;E<o;++E)for(let A=0;A<o;++A){const R=(A+m*o+E*o*o)*4,P=(A+E*o+m*o*o)*4;l[P+0]=d[R+0],l[P+1]=d[R+1],l[P+2]=d[R+2],l[P+3]=d[R+3]}}else l=new Uint8Array(d.buffer)}else l=r.data.slice();const f=new Nt(l,o);return f.type=t.type,f.name=t.name,$t(t,f),f}static createNeutral(t){const r=new Float32Array(t**3*4),i=t**2,s=1/(t-1);for(let l=0;l<t;++l)for(let f=0;f<t;++f)for(let u=0;u<t;++u){const d=(l+f*t+u*i)*4;r[d+0]=l*s,r[d+1]=f*s,r[d+2]=u*s,r[d+3]=1}const o=new Nt(r,t);return o.name="neutral",o}},Qs="uniform vec3 hue;uniform float saturation;void mainImage(const in vec4 inputColor,const in vec2 uv,out vec4 outputColor){vec3 color=vec3(dot(inputColor.rgb,hue.xyz),dot(inputColor.rgb,hue.zxy),dot(inputColor.rgb,hue.yzx));float average=(color.r+color.g+color.b)/3.0;vec3 diff=average-color;if(saturation>0.0){color+=diff*(1.0-1.0/(1.001-saturation));}else{color+=diff*-saturation;}outputColor=vec4(min(color,1.0),inputColor.a);}",Js=class extends it{constructor({blendFunction:e=V.SRC,hue:t=0,saturation:r=0}={}){super("HueSaturationEffect",Qs,{blendFunction:e,uniforms:new Map([["hue",new N(new He)],["saturation",new N(r)]])}),this.hue=t}get saturation(){return this.uniforms.get("saturation").value}set saturation(e){this.uniforms.get("saturation").value=e}getSaturation(){return this.saturation}setSaturation(e){this.saturation=e}get hue(){const e=this.uniforms.get("hue").value;return Math.acos((e.x*3-1)/2)}set hue(e){const t=Math.sin(e),r=Math.cos(e);this.uniforms.get("hue").value.set((2*r+1)/3,(-Math.sqrt(3)*t-r+1)/3,(Math.sqrt(3)*t-r+1)/3)}getHue(){return this.hue}setHue(e){this.hue=e}},eo=`uniform vec3 scale;uniform vec3 offset;
#ifdef CUSTOM_INPUT_DOMAIN
uniform vec3 domainMin;uniform vec3 domainMax;
#endif
#ifdef LUT_3D
#ifdef LUT_PRECISION_HIGH
#ifdef GL_FRAGMENT_PRECISION_HIGH
uniform highp sampler3D lut;
#else
uniform mediump sampler3D lut;
#endif
#else
uniform lowp sampler3D lut;
#endif
vec4 applyLUT(const in vec3 rgb){
#ifdef TETRAHEDRAL_INTERPOLATION
vec3 p=floor(rgb);vec3 f=rgb-p;vec3 v1=(p+0.5)*LUT_TEXEL_WIDTH;vec3 v4=(p+1.5)*LUT_TEXEL_WIDTH;vec3 v2,v3;vec3 frac;if(f.r>=f.g){if(f.g>f.b){frac=f.rgb;v2=vec3(v4.x,v1.y,v1.z);v3=vec3(v4.x,v4.y,v1.z);}else if(f.r>=f.b){frac=f.rbg;v2=vec3(v4.x,v1.y,v1.z);v3=vec3(v4.x,v1.y,v4.z);}else{frac=f.brg;v2=vec3(v1.x,v1.y,v4.z);v3=vec3(v4.x,v1.y,v4.z);}}else{if(f.b>f.g){frac=f.bgr;v2=vec3(v1.x,v1.y,v4.z);v3=vec3(v1.x,v4.y,v4.z);}else if(f.r>=f.b){frac=f.grb;v2=vec3(v1.x,v4.y,v1.z);v3=vec3(v4.x,v4.y,v1.z);}else{frac=f.gbr;v2=vec3(v1.x,v4.y,v1.z);v3=vec3(v1.x,v4.y,v4.z);}}vec4 n1=texture(lut,v1);vec4 n2=texture(lut,v2);vec4 n3=texture(lut,v3);vec4 n4=texture(lut,v4);vec4 weights=vec4(1.0-frac.x,frac.x-frac.y,frac.y-frac.z,frac.z);vec4 result=weights*mat4(vec4(n1.r,n2.r,n3.r,n4.r),vec4(n1.g,n2.g,n3.g,n4.g),vec4(n1.b,n2.b,n3.b,n4.b),vec4(1.0));return vec4(result.rgb,1.0);
#else
return texture(lut,rgb);
#endif
}
#else
#ifdef LUT_PRECISION_HIGH
#ifdef GL_FRAGMENT_PRECISION_HIGH
uniform highp sampler2D lut;
#else
uniform mediump sampler2D lut;
#endif
#else
uniform lowp sampler2D lut;
#endif
vec4 applyLUT(const in vec3 rgb){float slice=rgb.b*LUT_SIZE;float slice0=floor(slice);float interp=slice-slice0;float centeredInterp=interp-0.5;float slice1=slice0+sign(centeredInterp);
#ifdef LUT_STRIP_HORIZONTAL
float xOffset=clamp(rgb.r*LUT_TEXEL_HEIGHT,LUT_TEXEL_WIDTH*0.5,LUT_TEXEL_HEIGHT-LUT_TEXEL_WIDTH*0.5);vec2 uv0=vec2(slice0*LUT_TEXEL_HEIGHT+xOffset,rgb.g);vec2 uv1=vec2(slice1*LUT_TEXEL_HEIGHT+xOffset,rgb.g);
#else
float yOffset=clamp(rgb.g*LUT_TEXEL_WIDTH,LUT_TEXEL_HEIGHT*0.5,LUT_TEXEL_WIDTH-LUT_TEXEL_HEIGHT*0.5);vec2 uv0=vec2(rgb.r,slice0*LUT_TEXEL_WIDTH+yOffset);vec2 uv1=vec2(rgb.r,slice1*LUT_TEXEL_WIDTH+yOffset);
#endif
vec4 sample0=texture2D(lut,uv0);vec4 sample1=texture2D(lut,uv1);return mix(sample0,sample1,abs(centeredInterp));}
#endif
void mainImage(const in vec4 inputColor,const in vec2 uv,out vec4 outputColor){vec3 c=inputColor.rgb;
#ifdef CUSTOM_INPUT_DOMAIN
if(c.r>=domainMin.r&&c.g>=domainMin.g&&c.b>=domainMin.b&&c.r<=domainMax.r&&c.g<=domainMax.g&&c.b<=domainMax.b){c=applyLUT(scale*c+offset).rgb;}else{c=inputColor.rgb;}
#else
#if !defined(LUT_3D) || defined(TETRAHEDRAL_INTERPOLATION)
c=clamp(c,0.0,1.0);
#endif
c=applyLUT(scale*c+offset).rgb;
#endif
outputColor=vec4(c,inputColor.a);}`,to=class extends it{constructor(e,{blendFunction:t=V.SRC,tetrahedralInterpolation:r=!1,inputEncoding:i=sr,inputColorSpace:s}={}){super("LUT3DEffect",eo,{blendFunction:t,uniforms:new Map([["lut",new N(null)],["scale",new N(new He)],["offset",new N(new He)],["domainMin",new N(null)],["domainMax",new N(null)]])}),this.tetrahedralInterpolation=r,this.inputColorSpace=s||on.get(i),this.lut=e}get inputEncoding(){return this.inputColorSpace}set inputEncoding(e){this.inputColorSpace=e}getInputEncoding(){return this.inputColorSpace}setInputEncoding(e){this.inputColorSpace=e}getOutputEncoding(){return this.outputColorSpace}get lut(){return this.uniforms.get("lut").value}set lut(e){const t=this.defines,r=this.uniforms;if(this.lut!==e&&(r.get("lut").value=e,e!==null)){const i=e.image,s=this.tetrahedralInterpolation;if(t.clear(),t.set("LUT_SIZE",Math.min(i.width,i.height).toFixed(16)),t.set("LUT_TEXEL_WIDTH",(1/i.width).toFixed(16)),t.set("LUT_TEXEL_HEIGHT",(1/i.height).toFixed(16)),r.get("domainMin").value=null,r.get("domainMax").value=null,(e.type===xe||e.type===Pe)&&t.set("LUT_PRECISION_HIGH","1"),i.width>i.height?t.set("LUT_STRIP_HORIZONTAL","1"):e instanceof Lt&&t.set("LUT_3D","1"),e instanceof pn){const o=e.domainMin,l=e.domainMax;(o.x!==0||o.y!==0||o.z!==0||l.x!==1||l.y!==1||l.z!==1)&&(t.set("CUSTOM_INPUT_DOMAIN","1"),r.get("domainMin").value=o.clone(),r.get("domainMax").value=l.clone())}this.tetrahedralInterpolation=s}}getLUT(){return this.lut}setLUT(e){this.lut=e}updateScaleOffset(){const e=this.lut;if(e!==null){const t=Math.min(e.image.width,e.image.height),r=this.uniforms.get("scale").value,i=this.uniforms.get("offset").value;if(this.tetrahedralInterpolation&&e instanceof Lt)if(this.defines.has("CUSTOM_INPUT_DOMAIN")){const s=e.domainMax.clone().sub(e.domainMin);r.setScalar(t-1).divide(s),i.copy(e.domainMin).negate().multiply(r)}else r.setScalar(t-1),i.setScalar(0);else if(this.defines.has("CUSTOM_INPUT_DOMAIN")){const s=e.domainMax.clone().sub(e.domainMin).multiplyScalar(t);r.setScalar(t-1).divide(s),i.copy(e.domainMin).negate().multiply(r).addScalar(1/(2*t))}else r.setScalar((t-1)/t),i.setScalar(1/(2*t))}}configureTetrahedralInterpolation(){const e=this.lut;e!==null&&(e.minFilter=Me,e.magFilter=Me,this.tetrahedralInterpolation&&(e instanceof Lt?(e.minFilter=Je,e.magFilter=Je):console.warn("Tetrahedral interpolation requires a 3D texture")),e.source===void 0&&(e.needsUpdate=!0))}get tetrahedralInterpolation(){return this.defines.has("TETRAHEDRAL_INTERPOLATION")}set tetrahedralInterpolation(e){e?this.defines.set("TETRAHEDRAL_INTERPOLATION","1"):this.defines.delete("TETRAHEDRAL_INTERPOLATION"),this.configureTetrahedralInterpolation(),this.updateScaleOffset(),this.setChanged()}setTetrahedralInterpolationEnabled(e){this.tetrahedralInterpolation=e}},ro=`#include <tonemapping_pars_fragment>
#if THREE_REVISION < 143
#define luminance(v) linearToRelativeLuminance(v)
#endif
uniform float whitePoint;
#if TONE_MAPPING_MODE == 1 || TONE_MAPPING_MODE == 2
uniform float middleGrey;
#if TONE_MAPPING_MODE == 2
uniform lowp sampler2D luminanceBuffer;
#else
uniform float averageLuminance;
#endif
vec3 Reinhard2ToneMapping(vec3 color){color*=toneMappingExposure;float l=luminance(color);
#if TONE_MAPPING_MODE == 2
float lumAvg=unpackRGBAToFloat(texture2D(luminanceBuffer,vec2(0.5)));
#else
float lumAvg=averageLuminance;
#endif
float lumScaled=(l*middleGrey)/max(lumAvg,1e-6);float lumCompressed=lumScaled*(1.0+lumScaled/(whitePoint*whitePoint));lumCompressed/=(1.0+lumScaled);return clamp(lumCompressed*color,0.0,1.0);}
#elif TONE_MAPPING_MODE == 3
#define A 0.15
#define B 0.50
#define C 0.10
#define D 0.20
#define E 0.02
#define F 0.30
vec3 Uncharted2Helper(const in vec3 x){return((x*(A*x+C*B)+D*E)/(x*(A*x+B)+D*F))-E/F;}vec3 Uncharted2ToneMapping(vec3 color){color*=toneMappingExposure;return clamp(Uncharted2Helper(color)/Uncharted2Helper(vec3(whitePoint)),0.0,1.0);}
#endif
void mainImage(const in vec4 inputColor,const in vec2 uv,out vec4 outputColor){
#if TONE_MAPPING_MODE == 1 || TONE_MAPPING_MODE == 2
outputColor=vec4(Reinhard2ToneMapping(inputColor.rgb),inputColor.a);
#elif TONE_MAPPING_MODE == 3
outputColor=vec4(Uncharted2ToneMapping(inputColor.rgb),inputColor.a);
#else
outputColor=vec4(toneMapping(inputColor.rgb),inputColor.a);
#endif
}`,no=class extends it{constructor({blendFunction:e=V.SRC,adaptive:t=!1,mode:r=t?Ae.REINHARD2_ADAPTIVE:Ae.AGX,resolution:i=256,maxLuminance:s=4,whitePoint:o=s,middleGrey:l=.6,minLuminance:f=.01,averageLuminance:u=1,adaptationRate:d=1}={}){super("ToneMappingEffect",ro,{blendFunction:e,uniforms:new Map([["luminanceBuffer",new N(null)],["maxLuminance",new N(s)],["whitePoint",new N(o)],["middleGrey",new N(l)],["averageLuminance",new N(u)]])}),this.renderTargetLuminance=new Le(1,1,{minFilter:Mi,depthBuffer:!1}),this.renderTargetLuminance.texture.generateMipmaps=!0,this.renderTargetLuminance.texture.name="Luminance",this.luminancePass=new dn({renderTarget:this.renderTargetLuminance}),this.adaptiveLuminancePass=new Ja(this.luminancePass.texture,{minLuminance:f,adaptationRate:d}),this.uniforms.get("luminanceBuffer").value=this.adaptiveLuminancePass.texture,this.resolution=i,this.mode=r}get mode(){return Number(this.defines.get("TONE_MAPPING_MODE"))}set mode(e){if(this.mode!==e){switch(this.defines.clear(),this.defines.set("TONE_MAPPING_MODE",e.toFixed(0)),e=Ca(e),e){case Ae.REINHARD:this.defines.set("toneMapping(texel)","ReinhardToneMapping(texel)");break;case Ae.OPTIMIZED_CINEON:this.defines.set("toneMapping(texel)","OptimizedCineonToneMapping(texel)");break;case Ae.ACES_FILMIC:this.defines.set("toneMapping(texel)","ACESFilmicToneMapping(texel)");break;case Ae.AGX:this.defines.set("toneMapping(texel)","AgXToneMapping(texel)");break;default:this.defines.set("toneMapping(texel)","texel");break}this.adaptiveLuminancePass.enabled=e===Ae.REINHARD2_ADAPTIVE,this.setChanged()}}getMode(){return this.mode}setMode(e){this.mode=e}get whitePoint(){return this.uniforms.get("whitePoint").value}set whitePoint(e){this.uniforms.get("whitePoint").value=e}get middleGrey(){return this.uniforms.get("middleGrey").value}set middleGrey(e){this.uniforms.get("middleGrey").value=e}get averageLuminance(){return this.uniforms.get("averageLuminance").value}set averageLuminance(e){this.uniforms.get("averageLuminance").value=e}get adaptiveLuminanceMaterial(){return this.adaptiveLuminancePass.fullscreenMaterial}getAdaptiveLuminanceMaterial(){return this.adaptiveLuminanceMaterial}get resolution(){return this.luminancePass.resolution.width}set resolution(e){const t=Math.max(0,Math.ceil(Math.log2(e))),r=Math.pow(2,t);this.luminancePass.resolution.setPreferredSize(r,r),this.adaptiveLuminanceMaterial.mipLevel1x1=t}getResolution(){return this.resolution}setResolution(e){this.resolution=e}get adaptive(){return this.mode===Ae.REINHARD2_ADAPTIVE}set adaptive(e){this.mode=e?Ae.REINHARD2_ADAPTIVE:Ae.REINHARD2}get adaptationRate(){return this.adaptiveLuminanceMaterial.adaptationRate}set adaptationRate(e){this.adaptiveLuminanceMaterial.adaptationRate=e}get distinction(){return console.warn(this.name,"distinction was removed."),1}set distinction(e){console.warn(this.name,"distinction was removed.")}update(e,t,r){this.adaptiveLuminancePass.enabled&&(this.luminancePass.render(e,t),this.adaptiveLuminancePass.render(e,null,null,r))}initialize(e,t,r){this.adaptiveLuminancePass.initialize(e,t,r)}},io=class extends Ri{load(e,t=()=>{},r=()=>{},i=null){const s=this.manager,o=new bi,l=new Ai(o);return l.setPath(this.path),l.setResponseType("text"),new Promise((f,u)=>{o.onError=d=>{s.itemError(d),i!==null?(i(`Failed to load ${d}`),f()):u(`Failed to load ${d}`)},s.itemStart(e),l.load(e,d=>{try{const m=this.parse(d);s.itemEnd(e),t(m),f(m)}catch(m){console.error(m),o.onError(e)}},r)})}parse(e){const t=/TITLE +"([^"]*)"/,r=/LUT_3D_SIZE +(\d+)/,i=/DOMAIN_MIN +([\d.]+) +([\d.]+) +([\d.]+)/,s=/DOMAIN_MAX +([\d.]+) +([\d.]+) +([\d.]+)/,o=/^([\d.e+-]+) +([\d.e+-]+) +([\d.e+-]+) *$/gm;let l=t.exec(e);const f=l!==null?l[1]:null;if(l=r.exec(e),l===null)throw new Error("Missing LUT_3D_SIZE information");const u=Number(l[1]),d=new Float32Array(u**3*4),m=new He(0,0,0),E=new He(1,1,1);if(l=i.exec(e),l!==null&&m.set(Number(l[1]),Number(l[2]),Number(l[3])),l=s.exec(e),l!==null&&E.set(Number(l[1]),Number(l[2]),Number(l[3])),m.x>E.x||m.y>E.y||m.z>E.z)throw m.set(0,0,0),E.set(1,1,1),new Error("Invalid input domain");let A=0;for(;(l=o.exec(e))!==null;)d[A++]=Number(l[1]),d[A++]=Number(l[2]),d[A++]=Number(l[3]),d[A++]=1;const R=new pn(d,u);return R.domainMin.copy(m),R.domainMax.copy(E),f!==null&&(R.name=f),R}};const ao=b.createContext(null),Hr=e=>(e.getAttributes()&Oe.CONVOLUTION)===Oe.CONVOLUTION,so=qt.memo(b.forwardRef(({children:e,camera:t,scene:r,resolutionScale:i,enabled:s=!0,renderPriority:o=1,autoClear:l=!0,depthBuffer:f,disableNormalPass:u,stencilBuffer:d,multisampling:m=8,frameBufferType:E=Pe},A)=>{const{gl:R,scene:P,camera:G,size:W}=Ze(),X=r||P,O=t||G,[x,F,z]=b.useMemo(()=>{const L=zi(),j=new us(R,{depthBuffer:f,stencilBuffer:d,multisampling:m>0&&L?m:0,frameBufferType:E});j.addPass(new fn(X,O));let U=null,q=null;return u||(q=new os(X,O),q.enabled=!1,j.addPass(q),i!==void 0&&L&&(U=new ts({normalBuffer:q.texture,resolutionScale:i}),U.enabled=!1,j.addPass(U))),[j,q,U]},[O,R,f,d,m,E,X,u,i]);b.useEffect(()=>x==null?void 0:x.setSize(W.width,W.height),[x,W]),Mt((L,j)=>{if(s){const U=R.autoClear;R.autoClear=l,d&&!l&&R.clearStencil(),x.render(j),R.autoClear=U}},s?o:0);const B=b.useRef(null),Y=Di(B);b.useLayoutEffect(()=>{const L=[];if(B.current&&Y.current&&x){const j=Y.current.objects;for(let U=0;U<j.length;U++){const q=j[U];if(q instanceof it){const me=[q];if(!Hr(q)){let he=null;for(;(he=j[U+1])instanceof it&&!Hr(he);)me.push(he),U++}const ue=new ns(O,...me);L.push(ue)}else q instanceof Re&&L.push(q)}for(const U of L)x==null||x.addPass(U);F&&(F.enabled=!0),z&&(z.enabled=!0)}return()=>{for(const j of L)x==null||x.removePass(j);F&&(F.enabled=!1),z&&(z.enabled=!1)}},[x,e,O,F,z,Y]);const H=b.useMemo(()=>({composer:x,normalPass:F,downSamplingPass:z,resolutionScale:i,camera:O,scene:X}),[x,F,z,i,O,X]);return b.useImperativeHandle(A,()=>x,[x]),C.jsx(ao.Provider,{value:H,children:C.jsx("group",{ref:B,children:e})})}));let oo=0;const kr=new WeakMap,pr=(e,t)=>qt.forwardRef(function({blendFunction:i=t==null?void 0:t.blendFunction,opacity:s=t==null?void 0:t.opacity,...o},l){let f=kr.get(e);if(!f){const m=`@react-three/postprocessing/${e.name}-${oo++}`;ir({[m]:e}),kr.set(e,f=m)}const u=Ze(m=>m.camera),d=qt.useMemo(()=>{var m,E;return[...(m=t==null?void 0:t.args)!=null?m:[],...(E=o.args)!=null?E:[{...t,...o}]]},[JSON.stringify(o)]);return C.jsx(f,{camera:u,"blendMode-blendFunction":i,"blendMode-opacity-value":s,...o,ref:l,args:d})}),lo=pr(Xs,{blendFunction:V.ADD}),co=pr(Ys),uo=pr(Js),ho=b.forwardRef(function({blendFunction:t,adaptive:r,mode:i,resolution:s,maxLuminance:o,whitePoint:l,middleGrey:f,minLuminance:u,averageLuminance:d,adaptationRate:m,...E},A){const R=b.useMemo(()=>new no({blendFunction:t,adaptive:r,mode:i,resolution:s,maxLuminance:o,whitePoint:l,middleGrey:f,minLuminance:u,averageLuminance:d,adaptationRate:m}),[t,r,i,s,o,l,f,u,d,m]);return b.useEffect(()=>{R.dispose()},[R]),C.jsx("primitive",{...E,ref:A,object:R,attributes:Oe.CONVOLUTION})}),fo=b.forwardRef(function({lut:t,tetrahedralInterpolation:r,...i},s){const o=b.useMemo(()=>new to(t,i),[t,i]),l=Ze(f=>f.invalidate);return b.useLayoutEffect(()=>{r&&(o.tetrahedralInterpolation=r),t&&(o.lut=t),l()},[o,l,t,r]),C.jsx("primitive",{ref:s,object:o,dispose:null})}),vo=e=>{const t=b.useRef(),{nodes:r}=Ni("/sohyunjun-portfolio-vite-2024/models/torus-through-planes.glb"),i=Wr(io,"/sohyunjun-portfolio-vite-2024/models/F-6800-STD.cube"),{section:s}=e;return Mt(({pointer:o})=>{if(t.current){const f=Math.PI/10,u=o.x*f,d=o.y*f;t.current.rotation.y=Rr.lerp(t.current.rotation.y,u,.05),t.current.rotation.x=Rr.lerp(t.current.rotation.x,d,.05)}}),C.jsxs(rr.group,{ref:t,...e,dispose:null,animate:{rotateY:s===0?0:3},children:[C.jsx("mesh",{castShadow:!0,receiveShadow:!0,geometry:r.Plane.geometry,position:[0,-.007,0],rotation:[Math.PI/2,0,0],scale:[1.906,2.541,1.906],children:C.jsx(ia,{backside:!0,samples:16,resolution:256,transmission:1,roughness:.6,thickness:.08,backsideThickness:.05,ior:1,chromaticAberration:3,anisotropy:1,distortion:0,distortionScale:.5,temporalDistortion:0,attenuationDistance:.5,anisotropicBlur:.1,envMapIntensity:.3,color:"#d3d3d3"})}),C.jsx("mesh",{castShadow:!0,receiveShadow:!0,geometry:r.Torus.geometry,material:r.Torus.material,rotation:[Math.PI/2,0,-Math.PI/2]}),C.jsx("ambientLight",{intensity:.5}),C.jsx("spotLight",{position:[10,10,10],angle:.15,penumbra:1}),C.jsx("pointLight",{position:[-10,-10,-10]}),C.jsx(ua,{files:"/sohyunjun-portfolio-vite-2024/images/peppermint_powerplant_1k.hdr",resolution:512,children:C.jsxs("group",{rotation:[0,0,1],children:[C.jsx(_t,{form:"circle",intensity:5,position:[0,5,-10],scale:20,onUpdate:o=>o.lookAt(0,0,0)}),C.jsx(_t,{intensity:.1,onUpdate:o=>o.lookAt(0,0,0),position:[-5,20,-1],"rotation-y":Math.PI/2,scale:[50,10,1]}),C.jsx(_t,{intensity:.1,onUpdate:o=>o.lookAt(0,0,0),position:[10,1,0],"rotation-y":-Math.PI/2,scale:[50,10,1]}),C.jsx(_t,{color:"white",intensity:.2,onUpdate:o=>o.lookAt(0,0,0),position:[0,1,0],scale:[10,100,1]}),C.jsx(_t,{intensity:10,position:[-20,-8,15],scale:10,onUpdate:o=>o.lookAt(0,0,0)})]})}),C.jsxs(so,{disableNormalPass:!0,children:[C.jsx(lo,{mipmapBlur:!0,luminanceThreshold:.5,intensity:.5}),C.jsx(fo,{lut:i}),C.jsx(co,{brightness:0,contrast:.1}),C.jsx(uo,{hue:0,saturation:-.25}),C.jsx(ho,{mode:Ae.ACES_FILMIC})]})]})},po=e=>{const{viewport:t}=Ze(),{section:r}=e;return Ar(),Ar(),C.jsxs(C.Fragment,{children:[C.jsx("color",{attach:"background",args:["#2c2c2c"]}),C.jsx(rr.group,{position:[0,0,-10],rotation:[.05,.5,.5],children:C.jsx(vo,{section:r})}),C.jsx(Gr,{children:C.jsx(rr.group,{position:[0,-5,0],animate:{z:r===1?0:-10,y:r===1?-t.height:-5},children:C.jsx(Ra,{})})})]})},mo=e=>{const{section:t,onSectionChange:r}=e,i=$n(),s=b.useRef(0),o=b.useRef(!1);return i.fill.style.top="0",i.fill.style.position="absolute",b.useEffect(()=>{Li.to(i.el,{duration:1,scrollTop:t*i.el.clientHeight,onStart:()=>{o.current=!0},onComplete:()=>{o.current=!1}})},[t]),Mt(()=>{if(o.current){s.current=i.scroll.current;return}const l=Math.floor(i.scroll.current*i.pages);i.scroll.current>s.current&&l===0&&r(1),i.scroll.current<s.current&&i.scroll.current<1/(i.pages-1)&&r(0),s.current=i.scroll.current}),null},mn=e=>{const{children:t}=e;return C.jsx(Jt.section,{className:"section",initial:{opacity:0,y:50},whileInView:{opacity:1,y:0},transition:{duration:1},children:t})},go=()=>C.jsx(mn,{children:C.jsxs("div",{className:"intro-container",children:[C.jsx(Jt.h1,{children:"Lorem Ipsum"}),C.jsxs(Jt.p,{initial:{opacity:0,y:25},whileInView:{opacity:1,y:1},transition:{duration:1,delay:1},children:["Lorem Ipsum is simply dummy text of the",C.jsx("br",{}),"printing and typesetting industry."]})]})}),So=()=>C.jsx(mn,{children:C.jsx("div",{className:"projects-container",children:C.jsx("h2",{children:"Featured Projects"})})}),xo=e=>C.jsxs("div",{className:"interface-container",children:[C.jsx(go,{}),C.jsx(So,{})]}),bo=()=>{const[e,t]=b.useState(0);return C.jsx(C.Fragment,{children:C.jsxs(Yn,{pages:3,damping:.1,children:[C.jsx(mo,{section:e,onSectionChange:t}),C.jsx(po,{section:e}),C.jsx(Gr,{html:!0,children:C.jsx(xo,{})})]})})};export{bo as default};
